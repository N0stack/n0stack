syntax = "proto3";

option go_package = "github.com/n0stack/n0stack/n0core/pkg/api/provisioning;provisioning";

package n0stack.internal.n0core.provisioning;

import "google/protobuf/empty.proto";

enum VirtualMachineAgentState {
  FAILED = 0;
  UNKNOWN = 1;
  SHUTDOWN = 2;
  RUNNING = 3;
  PAUSED = 4;
}
message BlockDev {
  string name = 1;
  string url = 2;
  uint32 boot_index = 3;
}
message NetDev {
  string name = 1;
  string network_name = 2;
  string hardware_address = 3;
}
message VirtualMachineAgent {
  string name = 1;
  string uuid = 2;

  VirtualMachineAgentState state = 3;

  uint32 vcpus = 4;
  uint64 memory_bytes = 5;

  repeated BlockDev blockdev = 6;
  repeated NetDev netdev = 7;

  uint32 websocket_port = 8;
}

service VirtualMachineAgentService {
  rpc CreateVirtualMachineAgent(CreateVirtualMachineAgentRequest) returns (VirtualMachineAgent) {}

  rpc DeleteVirtualMachineAgent(DeleteVirtualMachineAgentRequest) returns (google.protobuf.Empty) {}

  rpc BootVirtualMachineAgent(BootVirtualMachineAgentRequest) returns (BootVirtualMachineAgentResponse) {}
  rpc RebootVirtualMachineAgent(RebootVirtualMachineAgentRequest) returns (RebootVirtualMachineAgentResponse) {}
  rpc ShutdownVirtualMachineAgent(ShutdownVirtualMachineAgentRequest) returns (ShutdownVirtualMachineAgentResponse) {}
}

message CreateVirtualMachineAgentRequest {
  string name = 1;
  string uuid = 2;

  uint32 vcpus = 4;
  uint64 memory_bytes = 5;

  repeated BlockDev blockdev = 6;
  repeated NetDev netdev = 7;
}

message DeleteVirtualMachineAgentRequest {
  string name = 1;

  // TODO: netdev の情報を QMP から取るまでは、とりあえず渡してもらう
  repeated NetDev netdev = 7;
}

message BootVirtualMachineAgentRequest {
  string name = 1;
}
message BootVirtualMachineAgentResponse {
  VirtualMachineAgentState state = 1;
}

message RebootVirtualMachineAgentRequest {
  string name = 1;

  bool hard = 2;
}
message RebootVirtualMachineAgentResponse {
  VirtualMachineAgentState state = 1;
}

message ShutdownVirtualMachineAgentRequest {
  string name = 1;

  bool hard = 2;
}
message ShutdownVirtualMachineAgentResponse {
  VirtualMachineAgentState state = 1;
}
