// Code generated by protoc-gen-go. DO NOT EDIT.
// source: n0stack/iam/v1alpha/user.proto

package piam

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	// Name is a unique field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Annotations can store metadata used by the system for control.
	// In particular, implementation-dependent fields that can not be set as protobuf fields are targeted.
	// The control specified by n0stack may delete metadata specified by the user.
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Labels stores user-defined metadata.
	// The n0stack system must not rewrite this value.
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DisplayName          string            `protobuf:"bytes,9,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PublicKeys           map[string]string `protobuf:"bytes,33,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe9f4d217f42362, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *User) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetPublicKeys() map[string]string {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

type GetUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe9f4d217f42362, []int{1}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateUserRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe9f4d217f42362, []int{2}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserRequest struct {
	User                 *User                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe9f4d217f42362, []int{3}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateUserRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteUserRequest) Reset()         { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()    {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_abe9f4d217f42362, []int{4}
}

func (m *DeleteUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserRequest.Unmarshal(m, b)
}
func (m *DeleteUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserRequest.Marshal(b, m, deterministic)
}
func (m *DeleteUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserRequest.Merge(m, src)
}
func (m *DeleteUserRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteUserRequest.Size(m)
}
func (m *DeleteUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserRequest proto.InternalMessageInfo

func (m *DeleteUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "n0stack.iam.v1alpha.User")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.iam.v1alpha.User.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.iam.v1alpha.User.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.iam.v1alpha.User.PublicKeysEntry")
	proto.RegisterType((*GetUserRequest)(nil), "n0stack.iam.v1alpha.GetUserRequest")
	proto.RegisterType((*CreateUserRequest)(nil), "n0stack.iam.v1alpha.CreateUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "n0stack.iam.v1alpha.UpdateUserRequest")
	proto.RegisterType((*DeleteUserRequest)(nil), "n0stack.iam.v1alpha.DeleteUserRequest")
}

func init() { proto.RegisterFile("n0stack/iam/v1alpha/user.proto", fileDescriptor_abe9f4d217f42362) }

var fileDescriptor_abe9f4d217f42362 = []byte{
	// 622 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0x56, 0x2e, 0x7f, 0xab, 0x1e, 0xff, 0x82, 0x76, 0x40, 0x28, 0x98, 0x5b, 0x6a, 0x28, 0x94,
	0x88, 0x78, 0x4a, 0xd8, 0x94, 0x54, 0x45, 0x6a, 0xa1, 0x20, 0x41, 0x41, 0x28, 0xa8, 0x1b, 0x36,
	0xd5, 0xd8, 0x9d, 0xba, 0x26, 0xbe, 0x0c, 0x9e, 0x71, 0x91, 0x85, 0x10, 0x82, 0x0d, 0x7b, 0x78,
	0x31, 0x24, 0x5e, 0x81, 0xc7, 0x60, 0x81, 0x66, 0x3c, 0x69, 0xd2, 0xd8, 0xae, 0x5a, 0xb1, 0xf2,
	0xcc, 0x9c, 0xef, 0x9c, 0xef, 0x3b, 0x97, 0x9c, 0xc0, 0xf5, 0x68, 0x85, 0x0b, 0xe2, 0x0e, 0xb1,
	0x4f, 0x42, 0x7c, 0x78, 0x9f, 0x04, 0xec, 0x80, 0xe0, 0x94, 0xd3, 0xc4, 0x66, 0x49, 0x2c, 0x62,
	0x74, 0x41, 0xdb, 0x6d, 0x9f, 0x84, 0xb6, 0xb6, 0x9b, 0x57, 0xbd, 0x38, 0xf6, 0x02, 0x8a, 0x09,
	0xf3, 0x31, 0x89, 0xa2, 0x58, 0x10, 0xe1, 0xc7, 0x11, 0xcf, 0x5d, 0xcc, 0x2b, 0xda, 0xaa, 0x6e,
	0x4e, 0xba, 0x8f, 0x69, 0xc8, 0x44, 0xa6, 0x8d, 0xed, 0x69, 0xe3, 0xbe, 0x4f, 0x83, 0xbd, 0xdd,
	0x90, 0xf0, 0xa1, 0x46, 0xdc, 0x53, 0x1f, 0xb7, 0xeb, 0xd1, 0xa8, 0xcb, 0x3f, 0x10, 0xcf, 0xa3,
	0x09, 0x8e, 0x99, 0x22, 0x28, 0x92, 0x59, 0x3f, 0x1b, 0xd0, 0xdc, 0xe1, 0x34, 0x41, 0x08, 0x9a,
	0x11, 0x09, 0x69, 0xab, 0xd6, 0xae, 0x2d, 0xcf, 0x0d, 0xd4, 0x19, 0x6d, 0x83, 0x31, 0xe1, 0xd1,
	0x6a, 0xb4, 0x1b, 0xcb, 0x46, 0xaf, 0x63, 0x97, 0xa4, 0x64, 0xcb, 0x18, 0xf6, 0xc6, 0x18, 0xbc,
	0x15, 0x89, 0x24, 0x1b, 0x4c, 0xba, 0xa3, 0x75, 0x98, 0x09, 0x88, 0x43, 0x03, 0xde, 0x6a, 0xaa,
	0x40, 0x4b, 0xd5, 0x81, 0xb6, 0x15, 0x2e, 0x8f, 0xa1, 0x9d, 0xd0, 0x22, 0xfc, 0xbf, 0xe7, 0x73,
	0x16, 0x90, 0x6c, 0x57, 0x09, 0x9d, 0x53, 0x42, 0x0d, 0xfd, 0xf6, 0x4a, 0xea, 0x7d, 0x0e, 0x06,
	0x4b, 0x9d, 0xc0, 0x77, 0x77, 0x87, 0x34, 0xe3, 0xad, 0x45, 0x45, 0x73, 0xb7, 0x9a, 0xe6, 0xb5,
	0x02, 0xbf, 0xa0, 0x99, 0xa6, 0x02, 0x76, 0xf4, 0x60, 0x3e, 0x82, 0xf9, 0xe9, 0x74, 0xd0, 0x3c,
	0x34, 0x86, 0x34, 0xd3, 0x25, 0x92, 0x47, 0x74, 0x11, 0xfe, 0x3b, 0x24, 0x41, 0x4a, 0x5b, 0x75,
	0xf5, 0x96, 0x5f, 0xfa, 0xf5, 0xd5, 0x9a, 0xf9, 0x10, 0x8c, 0x89, 0x2c, 0xce, 0xe4, 0xba, 0x0e,
	0xe7, 0xa7, 0x94, 0x9d, 0xc5, 0xdd, 0xba, 0x05, 0xe7, 0x9e, 0x51, 0x21, 0x13, 0x1c, 0xd0, 0xf7,
	0x29, 0xe5, 0xa2, 0xac, 0xb7, 0xd6, 0x26, 0x2c, 0x3c, 0x4e, 0x28, 0x11, 0x74, 0x12, 0xd8, 0x85,
	0xa6, 0x9c, 0x5d, 0x05, 0x34, 0x7a, 0x97, 0x2b, 0x2b, 0x37, 0x50, 0x30, 0xeb, 0x33, 0x2c, 0xec,
	0xb0, 0xbd, 0x7f, 0x8a, 0x81, 0xd6, 0xc0, 0x48, 0x55, 0x0c, 0x35, 0xc3, 0x2a, 0x1b, 0xa3, 0x67,
	0xda, 0xf9, 0x98, 0xdb, 0xa3, 0x31, 0xb7, 0x9f, 0xca, 0x31, 0x7f, 0x49, 0xf8, 0x70, 0x00, 0x39,
	0x5c, 0x9e, 0xad, 0x3b, 0xb0, 0xf0, 0x84, 0x06, 0xf4, 0xb8, 0x80, 0x92, 0x6c, 0x7b, 0x7f, 0x1a,
	0x60, 0x48, 0xcc, 0x1b, 0x9a, 0x1c, 0xfa, 0x2e, 0x45, 0x0c, 0x66, 0x75, 0x8d, 0xd0, 0xcd, 0x52,
	0x85, 0xc7, 0x2b, 0x68, 0x56, 0xa7, 0x61, 0x2d, 0x7d, 0xfd, 0xf5, 0xfb, 0x47, 0xfd, 0x06, 0xba,
	0xa6, 0x7e, 0xce, 0xd3, 0x6b, 0x80, 0xe3, 0x8f, 0x52, 0xc0, 0x27, 0xf4, 0xa5, 0x06, 0x30, 0x2e,
	0x38, 0xba, 0x5d, 0x1a, 0xb0, 0xd0, 0x91, 0x93, 0x88, 0x57, 0x14, 0x71, 0xc7, 0xb2, 0xaa, 0x88,
	0xd5, 0x1a, 0x52, 0xec, 0xfd, 0xbc, 0xd6, 0x52, 0xc3, 0xb8, 0x61, 0x15, 0x1a, 0x0a, 0x1d, 0x3d,
	0x85, 0x86, 0xde, 0xe9, 0x35, 0x70, 0x80, 0x71, 0xcb, 0x2a, 0x24, 0x14, 0x7a, 0x6a, 0x5e, 0x2a,
	0x0c, 0xc4, 0x96, 0x5c, 0x8a, 0xa3, 0xe2, 0x77, 0x4e, 0x2e, 0xfe, 0xe6, 0xb7, 0xda, 0xf7, 0x0d,
	0x07, 0xad, 0xc2, 0xac, 0x66, 0xb3, 0xba, 0x47, 0x47, 0x64, 0x1d, 0x08, 0xc1, 0x78, 0x1f, 0x63,
	0xcf, 0x17, 0x07, 0xa9, 0x63, 0xbb, 0x71, 0x88, 0x47, 0x4b, 0x5d, 0x7f, 0x3b, 0xf5, 0x7a, 0xad,
	0x37, 0x4f, 0x18, 0x0b, 0x7c, 0x57, 0xed, 0x03, 0xfc, 0x8e, 0xc7, 0x51, 0xbf, 0xf0, 0xf2, 0xb6,
	0x2d, 0x1d, 0x6c, 0xe2, 0xe2, 0x92, 0x7f, 0x85, 0x35, 0xe6, 0x93, 0xd0, 0x99, 0x51, 0x09, 0x3c,
	0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xc9, 0x0c, 0x76, 0x38, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/n0stack.iam.v1alpha.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/n0stack.iam.v1alpha.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/n0stack.iam.v1alpha.UserService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.iam.v1alpha.UserService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUser(context.Context, *GetUserRequest) (*User, error)
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*empty.Empty, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetUser(ctx context.Context, req *GetUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserServiceServer) CreateUser(ctx context.Context, req *CreateUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserServiceServer) UpdateUser(ctx context.Context, req *UpdateUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUserServiceServer) DeleteUser(ctx context.Context, req *DeleteUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.iam.v1alpha.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.iam.v1alpha.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.iam.v1alpha.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.iam.v1alpha.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.iam.v1alpha.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "n0stack/iam/v1alpha/user.proto",
}
