// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pool/v0/node.proto

package ppool // import "github.com/n0stack/n0stack/n0proto.go/pool/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import v0 "github.com/n0stack/n0stack/n0proto.go/budget/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Node_NodeState int32

const (
	Node_NotReady Node_NodeState = 0
	Node_Ready    Node_NodeState = 1
)

var Node_NodeState_name = map[int32]string{
	0: "NotReady",
	1: "Ready",
}
var Node_NodeState_value = map[string]int32{
	"NotReady": 0,
	"Ready":    1,
}

func (x Node_NodeState) String() string {
	return proto.EnumName(Node_NodeState_name, int32(x))
}
func (Node_NodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{0, 0}
}

type Node struct {
	Name        string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Address     string            `protobuf:"bytes,10,opt,name=address" json:"address,omitempty"`
	IpmiAddress string            `protobuf:"bytes,11,opt,name=ipmi_address,json=ipmiAddress" json:"ipmi_address,omitempty"`
	Serial      string            `protobuf:"bytes,12,opt,name=serial" json:"serial,omitempty"`
	// budget pool
	CpuMilliCores uint32 `protobuf:"varint,13,opt,name=cpu_milli_cores,json=cpuMilliCores" json:"cpu_milli_cores,omitempty"`
	MemoryBytes   uint64 `protobuf:"varint,14,opt,name=memory_bytes,json=memoryBytes" json:"memory_bytes,omitempty"`
	StorageBytes  uint64 `protobuf:"varint,15,opt,name=storage_bytes,json=storageBytes" json:"storage_bytes,omitempty"`
	// physical placement
	Datacenter           string                 `protobuf:"bytes,16,opt,name=datacenter" json:"datacenter,omitempty"`
	AvailabilityZone     string                 `protobuf:"bytes,17,opt,name=availability_zone,json=availabilityZone" json:"availability_zone,omitempty"`
	Cell                 string                 `protobuf:"bytes,18,opt,name=cell" json:"cell,omitempty"`
	Rack                 string                 `protobuf:"bytes,19,opt,name=rack" json:"rack,omitempty"`
	Unit                 uint32                 `protobuf:"varint,20,opt,name=unit" json:"unit,omitempty"`
	State                Node_NodeState         `protobuf:"varint,50,opt,name=state,enum=n0stack.pool.Node_NodeState" json:"state,omitempty"`
	ReservedComputes     map[string]*v0.Compute `protobuf:"bytes,51,rep,name=reserved_computes,json=reservedComputes" json:"reserved_computes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ReservedStorages     map[string]*v0.Storage `protobuf:"bytes,52,rep,name=reserved_storages,json=reservedStorages" json:"reserved_storages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetIpmiAddress() string {
	if m != nil {
		return m.IpmiAddress
	}
	return ""
}

func (m *Node) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *Node) GetCpuMilliCores() uint32 {
	if m != nil {
		return m.CpuMilliCores
	}
	return 0
}

func (m *Node) GetMemoryBytes() uint64 {
	if m != nil {
		return m.MemoryBytes
	}
	return 0
}

func (m *Node) GetStorageBytes() uint64 {
	if m != nil {
		return m.StorageBytes
	}
	return 0
}

func (m *Node) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *Node) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *Node) GetCell() string {
	if m != nil {
		return m.Cell
	}
	return ""
}

func (m *Node) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *Node) GetUnit() uint32 {
	if m != nil {
		return m.Unit
	}
	return 0
}

func (m *Node) GetState() Node_NodeState {
	if m != nil {
		return m.State
	}
	return Node_NotReady
}

func (m *Node) GetReservedComputes() map[string]*v0.Compute {
	if m != nil {
		return m.ReservedComputes
	}
	return nil
}

func (m *Node) GetReservedStorages() map[string]*v0.Storage {
	if m != nil {
		return m.ReservedStorages
	}
	return nil
}

type ListNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesRequest) Reset()         { *m = ListNodesRequest{} }
func (m *ListNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesRequest) ProtoMessage()    {}
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{1}
}
func (m *ListNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesRequest.Unmarshal(m, b)
}
func (m *ListNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesRequest.Marshal(b, m, deterministic)
}
func (dst *ListNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesRequest.Merge(dst, src)
}
func (m *ListNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesRequest.Size(m)
}
func (m *ListNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesRequest proto.InternalMessageInfo

type ListNodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesResponse) Reset()         { *m = ListNodesResponse{} }
func (m *ListNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesResponse) ProtoMessage()    {}
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{2}
}
func (m *ListNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesResponse.Unmarshal(m, b)
}
func (m *ListNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesResponse.Marshal(b, m, deterministic)
}
func (dst *ListNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesResponse.Merge(dst, src)
}
func (m *ListNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesResponse.Size(m)
}
func (m *ListNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesResponse proto.InternalMessageInfo

func (m *ListNodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type GetNodeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{3}
}
func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(dst, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplyNodeRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Address              string            `protobuf:"bytes,10,opt,name=address" json:"address,omitempty"`
	IpmiAddress          string            `protobuf:"bytes,11,opt,name=ipmi_address,json=ipmiAddress" json:"ipmi_address,omitempty"`
	Serial               string            `protobuf:"bytes,12,opt,name=serial" json:"serial,omitempty"`
	CpuMilliCores        uint32            `protobuf:"varint,13,opt,name=cpu_milli_cores,json=cpuMilliCores" json:"cpu_milli_cores,omitempty"`
	MemoryBytes          uint64            `protobuf:"varint,14,opt,name=memory_bytes,json=memoryBytes" json:"memory_bytes,omitempty"`
	StorageBytes         uint64            `protobuf:"varint,15,opt,name=storage_bytes,json=storageBytes" json:"storage_bytes,omitempty"`
	Datacenter           string            `protobuf:"bytes,16,opt,name=datacenter" json:"datacenter,omitempty"`
	AvailabilityZone     string            `protobuf:"bytes,17,opt,name=availability_zone,json=availabilityZone" json:"availability_zone,omitempty"`
	Cell                 string            `protobuf:"bytes,18,opt,name=cell" json:"cell,omitempty"`
	Rack                 string            `protobuf:"bytes,19,opt,name=rack" json:"rack,omitempty"`
	Unit                 uint32            `protobuf:"varint,20,opt,name=unit" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ApplyNodeRequest) Reset()         { *m = ApplyNodeRequest{} }
func (m *ApplyNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyNodeRequest) ProtoMessage()    {}
func (*ApplyNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{4}
}
func (m *ApplyNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyNodeRequest.Unmarshal(m, b)
}
func (m *ApplyNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyNodeRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyNodeRequest.Merge(dst, src)
}
func (m *ApplyNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyNodeRequest.Size(m)
}
func (m *ApplyNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyNodeRequest proto.InternalMessageInfo

func (m *ApplyNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApplyNodeRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ApplyNodeRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ApplyNodeRequest) GetIpmiAddress() string {
	if m != nil {
		return m.IpmiAddress
	}
	return ""
}

func (m *ApplyNodeRequest) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *ApplyNodeRequest) GetCpuMilliCores() uint32 {
	if m != nil {
		return m.CpuMilliCores
	}
	return 0
}

func (m *ApplyNodeRequest) GetMemoryBytes() uint64 {
	if m != nil {
		return m.MemoryBytes
	}
	return 0
}

func (m *ApplyNodeRequest) GetStorageBytes() uint64 {
	if m != nil {
		return m.StorageBytes
	}
	return 0
}

func (m *ApplyNodeRequest) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *ApplyNodeRequest) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *ApplyNodeRequest) GetCell() string {
	if m != nil {
		return m.Cell
	}
	return ""
}

func (m *ApplyNodeRequest) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *ApplyNodeRequest) GetUnit() uint32 {
	if m != nil {
		return m.Unit
	}
	return 0
}

type DeleteNodeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeRequest) Reset()         { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()    {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{5}
}
func (m *DeleteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeRequest.Unmarshal(m, b)
}
func (m *DeleteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeRequest.Merge(dst, src)
}
func (m *DeleteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeRequest.Size(m)
}
func (m *DeleteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeRequest proto.InternalMessageInfo

func (m *DeleteNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ScheduleComputeRequest struct {
	ComputeName          string            `protobuf:"bytes,2,opt,name=compute_name,json=computeName" json:"compute_name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestCpuMilliCore  uint32            `protobuf:"varint,4,opt,name=request_cpu_milli_core,json=requestCpuMilliCore" json:"request_cpu_milli_core,omitempty"`
	LimitCpuMilliCore    uint32            `protobuf:"varint,5,opt,name=limit_cpu_milli_core,json=limitCpuMilliCore" json:"limit_cpu_milli_core,omitempty"`
	RequestMemoryBytes   uint64            `protobuf:"varint,6,opt,name=request_memory_bytes,json=requestMemoryBytes" json:"request_memory_bytes,omitempty"`
	LimitMemoryBytes     uint64            `protobuf:"varint,7,opt,name=limit_memory_bytes,json=limitMemoryBytes" json:"limit_memory_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ScheduleComputeRequest) Reset()         { *m = ScheduleComputeRequest{} }
func (m *ScheduleComputeRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleComputeRequest) ProtoMessage()    {}
func (*ScheduleComputeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{6}
}
func (m *ScheduleComputeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleComputeRequest.Unmarshal(m, b)
}
func (m *ScheduleComputeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleComputeRequest.Marshal(b, m, deterministic)
}
func (dst *ScheduleComputeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleComputeRequest.Merge(dst, src)
}
func (m *ScheduleComputeRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleComputeRequest.Size(m)
}
func (m *ScheduleComputeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleComputeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleComputeRequest proto.InternalMessageInfo

func (m *ScheduleComputeRequest) GetComputeName() string {
	if m != nil {
		return m.ComputeName
	}
	return ""
}

func (m *ScheduleComputeRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ScheduleComputeRequest) GetRequestCpuMilliCore() uint32 {
	if m != nil {
		return m.RequestCpuMilliCore
	}
	return 0
}

func (m *ScheduleComputeRequest) GetLimitCpuMilliCore() uint32 {
	if m != nil {
		return m.LimitCpuMilliCore
	}
	return 0
}

func (m *ScheduleComputeRequest) GetRequestMemoryBytes() uint64 {
	if m != nil {
		return m.RequestMemoryBytes
	}
	return 0
}

func (m *ScheduleComputeRequest) GetLimitMemoryBytes() uint64 {
	if m != nil {
		return m.LimitMemoryBytes
	}
	return 0
}

type ReserveComputeRequest struct {
	NodeName             string            `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	ComputeName          string            `protobuf:"bytes,2,opt,name=compute_name,json=computeName" json:"compute_name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestCpuMilliCore  uint32            `protobuf:"varint,4,opt,name=request_cpu_milli_core,json=requestCpuMilliCore" json:"request_cpu_milli_core,omitempty"`
	LimitCpuMilliCore    uint32            `protobuf:"varint,5,opt,name=limit_cpu_milli_core,json=limitCpuMilliCore" json:"limit_cpu_milli_core,omitempty"`
	RequestMemoryBytes   uint64            `protobuf:"varint,6,opt,name=request_memory_bytes,json=requestMemoryBytes" json:"request_memory_bytes,omitempty"`
	LimitMemoryBytes     uint64            `protobuf:"varint,7,opt,name=limit_memory_bytes,json=limitMemoryBytes" json:"limit_memory_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReserveComputeRequest) Reset()         { *m = ReserveComputeRequest{} }
func (m *ReserveComputeRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveComputeRequest) ProtoMessage()    {}
func (*ReserveComputeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{7}
}
func (m *ReserveComputeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveComputeRequest.Unmarshal(m, b)
}
func (m *ReserveComputeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveComputeRequest.Marshal(b, m, deterministic)
}
func (dst *ReserveComputeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveComputeRequest.Merge(dst, src)
}
func (m *ReserveComputeRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveComputeRequest.Size(m)
}
func (m *ReserveComputeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveComputeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveComputeRequest proto.InternalMessageInfo

func (m *ReserveComputeRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ReserveComputeRequest) GetComputeName() string {
	if m != nil {
		return m.ComputeName
	}
	return ""
}

func (m *ReserveComputeRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ReserveComputeRequest) GetRequestCpuMilliCore() uint32 {
	if m != nil {
		return m.RequestCpuMilliCore
	}
	return 0
}

func (m *ReserveComputeRequest) GetLimitCpuMilliCore() uint32 {
	if m != nil {
		return m.LimitCpuMilliCore
	}
	return 0
}

func (m *ReserveComputeRequest) GetRequestMemoryBytes() uint64 {
	if m != nil {
		return m.RequestMemoryBytes
	}
	return 0
}

func (m *ReserveComputeRequest) GetLimitMemoryBytes() uint64 {
	if m != nil {
		return m.LimitMemoryBytes
	}
	return 0
}

type ReleaseComputeRequest struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	ComputeName          string   `protobuf:"bytes,2,opt,name=compute_name,json=computeName" json:"compute_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseComputeRequest) Reset()         { *m = ReleaseComputeRequest{} }
func (m *ReleaseComputeRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseComputeRequest) ProtoMessage()    {}
func (*ReleaseComputeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{8}
}
func (m *ReleaseComputeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseComputeRequest.Unmarshal(m, b)
}
func (m *ReleaseComputeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseComputeRequest.Marshal(b, m, deterministic)
}
func (dst *ReleaseComputeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseComputeRequest.Merge(dst, src)
}
func (m *ReleaseComputeRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseComputeRequest.Size(m)
}
func (m *ReleaseComputeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseComputeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseComputeRequest proto.InternalMessageInfo

func (m *ReleaseComputeRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ReleaseComputeRequest) GetComputeName() string {
	if m != nil {
		return m.ComputeName
	}
	return ""
}

type ScheduleStorageRequest struct {
	StorageName          string            `protobuf:"bytes,2,opt,name=storage_name,json=storageName" json:"storage_name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestBytes         uint64            `protobuf:"varint,4,opt,name=request_bytes,json=requestBytes" json:"request_bytes,omitempty"`
	LimitBytes           uint64            `protobuf:"varint,5,opt,name=limit_bytes,json=limitBytes" json:"limit_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ScheduleStorageRequest) Reset()         { *m = ScheduleStorageRequest{} }
func (m *ScheduleStorageRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleStorageRequest) ProtoMessage()    {}
func (*ScheduleStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{9}
}
func (m *ScheduleStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleStorageRequest.Unmarshal(m, b)
}
func (m *ScheduleStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleStorageRequest.Marshal(b, m, deterministic)
}
func (dst *ScheduleStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleStorageRequest.Merge(dst, src)
}
func (m *ScheduleStorageRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleStorageRequest.Size(m)
}
func (m *ScheduleStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleStorageRequest proto.InternalMessageInfo

func (m *ScheduleStorageRequest) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

func (m *ScheduleStorageRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ScheduleStorageRequest) GetRequestBytes() uint64 {
	if m != nil {
		return m.RequestBytes
	}
	return 0
}

func (m *ScheduleStorageRequest) GetLimitBytes() uint64 {
	if m != nil {
		return m.LimitBytes
	}
	return 0
}

type ReserveStorageRequest struct {
	NodeName             string            `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	StorageName          string            `protobuf:"bytes,2,opt,name=storage_name,json=storageName" json:"storage_name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestBytes         uint64            `protobuf:"varint,4,opt,name=request_bytes,json=requestBytes" json:"request_bytes,omitempty"`
	LimitBytes           uint64            `protobuf:"varint,5,opt,name=limit_bytes,json=limitBytes" json:"limit_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReserveStorageRequest) Reset()         { *m = ReserveStorageRequest{} }
func (m *ReserveStorageRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveStorageRequest) ProtoMessage()    {}
func (*ReserveStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{10}
}
func (m *ReserveStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveStorageRequest.Unmarshal(m, b)
}
func (m *ReserveStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveStorageRequest.Marshal(b, m, deterministic)
}
func (dst *ReserveStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveStorageRequest.Merge(dst, src)
}
func (m *ReserveStorageRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveStorageRequest.Size(m)
}
func (m *ReserveStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveStorageRequest proto.InternalMessageInfo

func (m *ReserveStorageRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ReserveStorageRequest) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

func (m *ReserveStorageRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ReserveStorageRequest) GetRequestBytes() uint64 {
	if m != nil {
		return m.RequestBytes
	}
	return 0
}

func (m *ReserveStorageRequest) GetLimitBytes() uint64 {
	if m != nil {
		return m.LimitBytes
	}
	return 0
}

type ReleaseStorageRequest struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	StorageName          string   `protobuf:"bytes,2,opt,name=storage_name,json=storageName" json:"storage_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseStorageRequest) Reset()         { *m = ReleaseStorageRequest{} }
func (m *ReleaseStorageRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseStorageRequest) ProtoMessage()    {}
func (*ReleaseStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_node_35993d153cf2a03b, []int{11}
}
func (m *ReleaseStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseStorageRequest.Unmarshal(m, b)
}
func (m *ReleaseStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseStorageRequest.Marshal(b, m, deterministic)
}
func (dst *ReleaseStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseStorageRequest.Merge(dst, src)
}
func (m *ReleaseStorageRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseStorageRequest.Size(m)
}
func (m *ReleaseStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseStorageRequest proto.InternalMessageInfo

func (m *ReleaseStorageRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ReleaseStorageRequest) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

func init() {
	proto.RegisterType((*Node)(nil), "n0stack.pool.Node")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.pool.Node.AnnotationsEntry")
	proto.RegisterMapType((map[string]*v0.Compute)(nil), "n0stack.pool.Node.ReservedComputesEntry")
	proto.RegisterMapType((map[string]*v0.Storage)(nil), "n0stack.pool.Node.ReservedStoragesEntry")
	proto.RegisterType((*ListNodesRequest)(nil), "n0stack.pool.ListNodesRequest")
	proto.RegisterType((*ListNodesResponse)(nil), "n0stack.pool.ListNodesResponse")
	proto.RegisterType((*GetNodeRequest)(nil), "n0stack.pool.GetNodeRequest")
	proto.RegisterType((*ApplyNodeRequest)(nil), "n0stack.pool.ApplyNodeRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.pool.ApplyNodeRequest.AnnotationsEntry")
	proto.RegisterType((*DeleteNodeRequest)(nil), "n0stack.pool.DeleteNodeRequest")
	proto.RegisterType((*ScheduleComputeRequest)(nil), "n0stack.pool.ScheduleComputeRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.pool.ScheduleComputeRequest.AnnotationsEntry")
	proto.RegisterType((*ReserveComputeRequest)(nil), "n0stack.pool.ReserveComputeRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.pool.ReserveComputeRequest.AnnotationsEntry")
	proto.RegisterType((*ReleaseComputeRequest)(nil), "n0stack.pool.ReleaseComputeRequest")
	proto.RegisterType((*ScheduleStorageRequest)(nil), "n0stack.pool.ScheduleStorageRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.pool.ScheduleStorageRequest.AnnotationsEntry")
	proto.RegisterType((*ReserveStorageRequest)(nil), "n0stack.pool.ReserveStorageRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.pool.ReserveStorageRequest.AnnotationsEntry")
	proto.RegisterType((*ReleaseStorageRequest)(nil), "n0stack.pool.ReleaseStorageRequest")
	proto.RegisterEnum("n0stack.pool.Node_NodeState", Node_NodeState_name, Node_NodeState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeService service

type NodeServiceClient interface {
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*Node, error)
	ApplyNode(ctx context.Context, in *ApplyNodeRequest, opts ...grpc.CallOption) (*Node, error)
	DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ScheduleCompute(ctx context.Context, in *ScheduleComputeRequest, opts ...grpc.CallOption) (*Node, error)
	ReserveCompute(ctx context.Context, in *ReserveComputeRequest, opts ...grpc.CallOption) (*Node, error)
	// rpc ResizeCompute(ResizeComputeRequest) returns (ReserveComputeResponse) {}
	ReleaseCompute(ctx context.Context, in *ReleaseComputeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ScheduleStorage(ctx context.Context, in *ScheduleStorageRequest, opts ...grpc.CallOption) (*Node, error)
	ReserveStorage(ctx context.Context, in *ReserveStorageRequest, opts ...grpc.CallOption) (*Node, error)
	// rpc ResizeStorae() returns () {}
	ReleaseStorage(ctx context.Context, in *ReleaseStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ListNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/GetNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ApplyNode(ctx context.Context, in *ApplyNodeRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ApplyNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/DeleteNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ScheduleCompute(ctx context.Context, in *ScheduleComputeRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ScheduleCompute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ReserveCompute(ctx context.Context, in *ReserveComputeRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ReserveCompute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ReleaseCompute(ctx context.Context, in *ReleaseComputeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ReleaseCompute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ScheduleStorage(ctx context.Context, in *ScheduleStorageRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ScheduleStorage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ReserveStorage(ctx context.Context, in *ReserveStorageRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ReserveStorage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ReleaseStorage(ctx context.Context, in *ReleaseStorageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/n0stack.pool.NodeService/ReleaseStorage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeService service

type NodeServiceServer interface {
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
	GetNode(context.Context, *GetNodeRequest) (*Node, error)
	ApplyNode(context.Context, *ApplyNodeRequest) (*Node, error)
	DeleteNode(context.Context, *DeleteNodeRequest) (*empty.Empty, error)
	ScheduleCompute(context.Context, *ScheduleComputeRequest) (*Node, error)
	ReserveCompute(context.Context, *ReserveComputeRequest) (*Node, error)
	// rpc ResizeCompute(ResizeComputeRequest) returns (ReserveComputeResponse) {}
	ReleaseCompute(context.Context, *ReleaseComputeRequest) (*empty.Empty, error)
	ScheduleStorage(context.Context, *ScheduleStorageRequest) (*Node, error)
	ReserveStorage(context.Context, *ReserveStorageRequest) (*Node, error)
	// rpc ResizeStorae() returns () {}
	ReleaseStorage(context.Context, *ReleaseStorageRequest) (*empty.Empty, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ApplyNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ApplyNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ApplyNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ApplyNode(ctx, req.(*ApplyNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).DeleteNode(ctx, req.(*DeleteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ScheduleCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ScheduleCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ScheduleCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ScheduleCompute(ctx, req.(*ScheduleComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ReserveCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ReserveCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ReserveCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ReserveCompute(ctx, req.(*ReserveComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ReleaseCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseComputeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ReleaseCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ReleaseCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ReleaseCompute(ctx, req.(*ReleaseComputeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ScheduleStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ScheduleStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ScheduleStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ScheduleStorage(ctx, req.(*ScheduleStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ReserveStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ReserveStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ReserveStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ReserveStorage(ctx, req.(*ReserveStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ReleaseStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ReleaseStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.pool.NodeService/ReleaseStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ReleaseStorage(ctx, req.(*ReleaseStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.pool.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNodes",
			Handler:    _NodeService_ListNodes_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _NodeService_GetNode_Handler,
		},
		{
			MethodName: "ApplyNode",
			Handler:    _NodeService_ApplyNode_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _NodeService_DeleteNode_Handler,
		},
		{
			MethodName: "ScheduleCompute",
			Handler:    _NodeService_ScheduleCompute_Handler,
		},
		{
			MethodName: "ReserveCompute",
			Handler:    _NodeService_ReserveCompute_Handler,
		},
		{
			MethodName: "ReleaseCompute",
			Handler:    _NodeService_ReleaseCompute_Handler,
		},
		{
			MethodName: "ScheduleStorage",
			Handler:    _NodeService_ScheduleStorage_Handler,
		},
		{
			MethodName: "ReserveStorage",
			Handler:    _NodeService_ReserveStorage_Handler,
		},
		{
			MethodName: "ReleaseStorage",
			Handler:    _NodeService_ReleaseStorage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pool/v0/node.proto",
}

func init() { proto.RegisterFile("pool/v0/node.proto", fileDescriptor_node_35993d153cf2a03b) }

var fileDescriptor_node_35993d153cf2a03b = []byte{
	// 1033 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xff, 0x6b, 0xdb, 0x46,
	0x14, 0x8f, 0x63, 0x3b, 0xa9, 0x9f, 0xed, 0xc4, 0xbe, 0x66, 0xe9, 0xe1, 0x8e, 0xd6, 0x95, 0xc3,
	0x66, 0xd8, 0x26, 0x07, 0xa7, 0x85, 0xb1, 0xd1, 0x41, 0x9a, 0x85, 0xfe, 0xb0, 0x25, 0x63, 0x0e,
	0x5b, 0xa1, 0x0c, 0x8c, 0x2c, 0xdf, 0x5c, 0x11, 0x49, 0xa7, 0xe9, 0x4e, 0x06, 0xef, 0xc7, 0xfd,
	0xb2, 0xff, 0xa1, 0xff, 0xc6, 0xd8, 0xff, 0x37, 0xee, 0x8b, 0x6c, 0x49, 0x96, 0x91, 0xbb, 0x86,
	0xc1, 0xa0, 0xbf, 0x24, 0xa7, 0xf7, 0x3e, 0xef, 0x73, 0x77, 0xef, 0xf3, 0xee, 0xe9, 0x64, 0x40,
	0x01, 0xa5, 0xee, 0x60, 0x7e, 0x3a, 0xf0, 0xe9, 0x94, 0x98, 0x41, 0x48, 0x39, 0x45, 0x0d, 0xff,
	0x94, 0x71, 0xcb, 0xbe, 0x35, 0x85, 0xaf, 0xf3, 0x70, 0x46, 0xe9, 0xcc, 0x25, 0x03, 0xe9, 0x9b,
	0x44, 0xbf, 0x0e, 0x88, 0x17, 0xf0, 0x85, 0x82, 0x76, 0x1e, 0x4c, 0xa2, 0xe9, 0x8c, 0x70, 0x41,
	0x60, 0x53, 0x2f, 0x88, 0x38, 0x59, 0x77, 0x30, 0x4e, 0x43, 0x6b, 0xa6, 0x1d, 0xc6, 0x5f, 0xfb,
	0x50, 0xb9, 0xa6, 0x53, 0x82, 0x10, 0x54, 0x7c, 0xcb, 0x23, 0xb8, 0xd4, 0x2d, 0xf5, 0x6b, 0x23,
	0x39, 0x46, 0x97, 0x50, 0xb7, 0x7c, 0x9f, 0x72, 0x8b, 0x3b, 0xd4, 0x67, 0xb8, 0xdc, 0x2d, 0xf7,
	0xeb, 0xc3, 0x9e, 0x99, 0x5c, 0x8f, 0x29, 0x82, 0xcd, 0xf3, 0x15, 0xea, 0xd2, 0xe7, 0xe1, 0x62,
	0x94, 0x8c, 0x43, 0x18, 0xf6, 0xad, 0xe9, 0x34, 0x24, 0x8c, 0x61, 0x90, 0xec, 0xf1, 0x23, 0x7a,
	0x02, 0x0d, 0x27, 0xf0, 0x9c, 0x71, 0xec, 0xae, 0x4b, 0x77, 0x5d, 0xd8, 0xce, 0x35, 0xe4, 0x18,
	0xf6, 0x18, 0x09, 0x1d, 0xcb, 0xc5, 0x0d, 0xe9, 0xd4, 0x4f, 0xe8, 0x13, 0x38, 0xb4, 0x83, 0x68,
	0xec, 0x39, 0xae, 0xeb, 0x8c, 0x6d, 0x1a, 0x12, 0x86, 0x9b, 0xdd, 0x52, 0xbf, 0x39, 0x6a, 0xda,
	0x41, 0x74, 0x25, 0xac, 0x17, 0xc2, 0x28, 0xa6, 0xf0, 0x88, 0x47, 0xc3, 0xc5, 0x78, 0xb2, 0xe0,
	0x84, 0xe1, 0x83, 0x6e, 0xa9, 0x5f, 0x19, 0xd5, 0x95, 0xed, 0x85, 0x30, 0xa1, 0x1e, 0x34, 0x75,
	0x52, 0x34, 0xe6, 0x50, 0x62, 0x1a, 0xda, 0xa8, 0x40, 0x8f, 0x00, 0xa6, 0x16, 0xb7, 0x6c, 0xe2,
	0x73, 0x12, 0xe2, 0x96, 0x5c, 0x4b, 0xc2, 0x82, 0x3e, 0x83, 0xb6, 0x35, 0xb7, 0x1c, 0xd7, 0x9a,
	0x38, 0xae, 0xc3, 0x17, 0xe3, 0xdf, 0xa9, 0x4f, 0x70, 0x5b, 0xc2, 0x5a, 0x49, 0xc7, 0x6b, 0xea,
	0xcb, 0x64, 0xdb, 0xc4, 0x75, 0x31, 0x52, 0xc9, 0x16, 0x63, 0x61, 0x0b, 0x2d, 0xfb, 0x16, 0xdf,
	0x57, 0x36, 0x31, 0x16, 0xb6, 0xc8, 0x77, 0x38, 0x3e, 0x92, 0x3b, 0x93, 0x63, 0x34, 0x84, 0x2a,
	0xe3, 0x16, 0x27, 0x78, 0xd8, 0x2d, 0xf5, 0x0f, 0x86, 0x1f, 0xe7, 0xc8, 0x21, 0xfe, 0xdc, 0x08,
	0xcc, 0x48, 0x41, 0xd1, 0x4f, 0xd0, 0x0e, 0x09, 0x23, 0xe1, 0x9c, 0x4c, 0xc7, 0xba, 0x30, 0x18,
	0x3e, 0x93, 0x72, 0xf6, 0x73, 0xe2, 0x47, 0x1a, 0x7b, 0xa1, 0xa1, 0x4a, 0xd3, 0x56, 0x98, 0x31,
	0xa7, 0x68, 0x75, 0xb2, 0x18, 0x7e, 0x5a, 0x48, 0x7b, 0xa3, 0xa1, 0x19, 0xda, 0xd8, 0xdc, 0xf9,
	0x06, 0x5a, 0xd9, 0x82, 0x42, 0x2d, 0x28, 0xdf, 0x92, 0x85, 0xae, 0x4e, 0x31, 0x44, 0x47, 0x50,
	0x9d, 0x5b, 0x6e, 0x44, 0xf0, 0xae, 0xb4, 0xa9, 0x87, 0xaf, 0x76, 0xbf, 0x2c, 0x75, 0x7e, 0x81,
	0x8f, 0x72, 0x77, 0x90, 0x43, 0xf2, 0x45, 0x92, 0xa4, 0x3e, 0x7c, 0xb0, 0x5c, 0xb5, 0x3a, 0x2f,
	0xa6, 0x8e, 0xdf, 0xc0, 0x9e, 0xda, 0xc8, 0xbf, 0x60, 0xd7, 0xf1, 0x09, 0x76, 0xe3, 0x04, 0x6a,
	0x4b, 0xf5, 0x50, 0x03, 0xee, 0x5d, 0x53, 0x3e, 0x22, 0xd6, 0x74, 0xd1, 0xda, 0x41, 0x35, 0xa8,
	0xaa, 0x61, 0xc9, 0x40, 0xd0, 0xfa, 0xde, 0x61, 0x5c, 0x20, 0xd9, 0x88, 0xfc, 0x16, 0x11, 0xc6,
	0x8d, 0xe7, 0xd0, 0x4e, 0xd8, 0x58, 0x40, 0x7d, 0x46, 0x50, 0x1f, 0xaa, 0xa2, 0x93, 0x30, 0x5c,
	0x92, 0xaa, 0xa0, 0x75, 0x55, 0x46, 0x0a, 0x60, 0x9c, 0xc0, 0xc1, 0x4b, 0x22, 0xa3, 0x35, 0x61,
	0x5e, 0x47, 0x30, 0xfe, 0xac, 0x40, 0xeb, 0x3c, 0x08, 0xdc, 0x45, 0x01, 0x10, 0xfd, 0x98, 0xd7,
	0x3a, 0x06, 0xe9, 0xe9, 0xb3, 0x44, 0x1f, 0xda, 0xc8, 0x7f, 0xd7, 0x46, 0xde, 0xf7, 0x90, 0x19,
	0x9f, 0x42, 0xfb, 0x5b, 0xe2, 0x12, 0x4e, 0x8a, 0x4a, 0xe6, 0x6d, 0x19, 0x8e, 0x6f, 0xec, 0x37,
	0x64, 0x1a, 0xb9, 0x24, 0x3e, 0x4e, 0x1a, 0xfe, 0x04, 0x1a, 0xba, 0x1b, 0x8d, 0x65, 0x98, 0x9a,
	0xa4, 0xae, 0x6d, 0xd7, 0xa2, 0x8e, 0x5e, 0xe5, 0xd5, 0xd1, 0xb3, 0x74, 0x1d, 0xe5, 0xb3, 0x17,
	0x54, 0xd3, 0x19, 0x1c, 0x87, 0x0a, 0x38, 0x4e, 0x17, 0x00, 0xae, 0xc8, 0x2c, 0xdd, 0xd7, 0xde,
	0x8b, 0x44, 0x19, 0xa0, 0x01, 0x1c, 0xb9, 0x8e, 0xe7, 0xac, 0x85, 0x54, 0x65, 0x48, 0x5b, 0xfa,
	0x52, 0x01, 0xa7, 0x70, 0x14, 0xcf, 0x92, 0x2a, 0x9f, 0x3d, 0x59, 0x1a, 0x48, 0xfb, 0xae, 0x12,
	0x55, 0xf4, 0x39, 0x20, 0x35, 0x45, 0x0a, 0xbf, 0x2f, 0xf1, 0x2d, 0xe9, 0x49, 0xa0, 0xdf, 0x5b,
	0xc5, 0xbf, 0xcb, 0xcb, 0x6e, 0x96, 0xd1, 0xe6, 0x21, 0xd4, 0x44, 0x63, 0x18, 0x27, 0xf4, 0xbc,
	0x27, 0x0c, 0x52, 0x95, 0x2d, 0x84, 0xfb, 0x39, 0x4f, 0xb8, 0xa7, 0x69, 0xe1, 0x72, 0x67, 0xfe,
	0xa0, 0xdb, 0x16, 0xba, 0xbd, 0x12, 0xb2, 0xb9, 0xc4, 0x62, 0x77, 0x2c, 0x9b, 0xf1, 0x76, 0x77,
	0x75, 0x5a, 0xe3, 0xd7, 0xd3, 0xea, 0xb4, 0xc6, 0xfd, 0x2d, 0x19, 0xad, 0x6d, 0xef, 0x7c, 0x5a,
	0xd3, 0xec, 0x05, 0xaa, 0xf7, 0xa0, 0x19, 0xeb, 0xa1, 0x12, 0x5b, 0x51, 0xbd, 0x55, 0x1b, 0x95,
	0x04, 0x8f, 0xa1, 0xae, 0x24, 0x50, 0x90, 0xaa, 0x84, 0x80, 0x34, 0xdd, 0xd1, 0x69, 0xd9, 0x5d,
	0x9e, 0x96, 0x4c, 0x6e, 0x8a, 0xd2, 0x5e, 0x94, 0xb8, 0x77, 0x38, 0x2d, 0xff, 0xc3, 0xbc, 0xad,
	0xaa, 0xf5, 0x6e, 0xd3, 0x36, 0xfc, 0x63, 0x0f, 0xea, 0xf2, 0xba, 0x44, 0xc2, 0xb9, 0x63, 0x13,
	0x74, 0x0d, 0xb5, 0xe5, 0x1d, 0x08, 0x3d, 0x4a, 0xa7, 0x2f, 0x7b, 0x61, 0xea, 0x3c, 0xde, 0xe8,
	0x57, 0x97, 0x27, 0x63, 0x07, 0x3d, 0x87, 0x7d, 0x7d, 0x29, 0x42, 0x99, 0x7b, 0x76, 0xfa, 0xae,
	0xd4, 0xc9, 0xb9, 0x58, 0x19, 0x3b, 0xe8, 0x1c, 0x6a, 0xcb, 0x3b, 0x4e, 0x76, 0x39, 0xd9, 0xcb,
	0xcf, 0x06, 0x8a, 0x97, 0x00, 0xab, 0xd7, 0x2c, 0xca, 0x2c, 0x79, 0xed, 0x05, 0xdc, 0x39, 0x36,
	0xd5, 0xe7, 0xa1, 0x19, 0x7f, 0x1e, 0x9a, 0x97, 0xe2, 0xf3, 0xd0, 0xd8, 0x41, 0x57, 0x70, 0x98,
	0x79, 0x4f, 0xa2, 0x93, 0x6d, 0x5e, 0xa3, 0x1b, 0xd6, 0xf5, 0x1d, 0x1c, 0xa4, 0xbb, 0x37, 0xea,
	0x6d, 0xd1, 0xdb, 0x37, 0x90, 0xfd, 0x20, 0xc8, 0x92, 0xdd, 0x6c, 0x9d, 0x2c, 0xa7, 0xd7, 0x6d,
	0xb7, 0x59, 0x5d, 0x71, 0x9b, 0x36, 0x9b, 0x2e, 0xc8, 0xc2, 0xcd, 0xc6, 0x6c, 0xbd, 0x2d, 0x8e,
	0x66, 0xe1, 0x66, 0x37, 0x92, 0xe5, 0x1c, 0x95, 0xcd, 0x9b, 0x7d, 0xf1, 0xec, 0xf5, 0xd9, 0xcc,
	0xe1, 0x6f, 0xa2, 0x89, 0x69, 0x53, 0x6f, 0xa0, 0xa9, 0x12, 0xff, 0x65, 0x80, 0x39, 0xa3, 0x03,
	0xfd, 0xdb, 0xc2, 0xd7, 0x81, 0x18, 0x4c, 0xf6, 0xa4, 0xfd, 0xec, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf4, 0x35, 0xa1, 0xdf, 0x73, 0x10, 0x00, 0x00,
}
