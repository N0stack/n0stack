// Code generated by protoc-gen-go. DO NOT EDIT.
// source: n0stack/provisioning/v0/virtual_router.proto

package pprovisioning

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VirtualRouter_VirtualRouterState int32

const (
	VirtualRouter_VIRTUAL_ROUTER_UNSPECIFIED VirtualRouter_VirtualRouterState = 0
	// unknown state because failed to connect for scheduled node after RUNNING.
	VirtualRouter_UNKNOWN VirtualRouter_VirtualRouterState = 1
	// working API
	VirtualRouter_PENDING   VirtualRouter_VirtualRouterState = 2
	VirtualRouter_AVAILABLE VirtualRouter_VirtualRouterState = 3
)

var VirtualRouter_VirtualRouterState_name = map[int32]string{
	0: "VIRTUAL_ROUTER_UNSPECIFIED",
	1: "UNKNOWN",
	2: "PENDING",
	3: "AVAILABLE",
}

var VirtualRouter_VirtualRouterState_value = map[string]int32{
	"VIRTUAL_ROUTER_UNSPECIFIED": 0,
	"UNKNOWN":                    1,
	"PENDING":                    2,
	"AVAILABLE":                  3,
}

func (x VirtualRouter_VirtualRouterState) String() string {
	return proto.EnumName(VirtualRouter_VirtualRouterState_name, int32(x))
}

func (VirtualRouter_VirtualRouterState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{1, 0}
}

// target must be selected by connected network
type VirtualIPTarget struct {
	NetworkName          string   `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	NetworkInterfaceName string   `protobuf:"bytes,2,opt,name=network_interface_name,json=networkInterfaceName,proto3" json:"network_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualIPTarget) Reset()         { *m = VirtualIPTarget{} }
func (m *VirtualIPTarget) String() string { return proto.CompactTextString(m) }
func (*VirtualIPTarget) ProtoMessage()    {}
func (*VirtualIPTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{0}
}

func (m *VirtualIPTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualIPTarget.Unmarshal(m, b)
}
func (m *VirtualIPTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualIPTarget.Marshal(b, m, deterministic)
}
func (m *VirtualIPTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualIPTarget.Merge(m, src)
}
func (m *VirtualIPTarget) XXX_Size() int {
	return xxx_messageInfo_VirtualIPTarget.Size(m)
}
func (m *VirtualIPTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualIPTarget.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualIPTarget proto.InternalMessageInfo

func (m *VirtualIPTarget) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *VirtualIPTarget) GetNetworkInterfaceName() string {
	if m != nil {
		return m.NetworkInterfaceName
	}
	return ""
}

type VirtualRouter struct {
	Name                 string                                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Annotations          map[string]string                              `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string                              `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	State                VirtualRouter_VirtualRouterState               `protobuf:"varint,50,opt,name=state,proto3,enum=n0stack.provisioning.v0.VirtualRouter_VirtualRouterState" json:"state,omitempty"`
	NetworkInterfaces    []*VirtualRouter_VirtualRouterNetworkInterface `protobuf:"bytes,51,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	VirtualIp            map[string]*VirtualRouter_VirtualIP            `protobuf:"bytes,52,rep,name=virtual_ip,json=virtualIp,proto3" json:"virtual_ip,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *VirtualRouter) Reset()         { *m = VirtualRouter{} }
func (m *VirtualRouter) String() string { return proto.CompactTextString(m) }
func (*VirtualRouter) ProtoMessage()    {}
func (*VirtualRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{1}
}

func (m *VirtualRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualRouter.Unmarshal(m, b)
}
func (m *VirtualRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualRouter.Marshal(b, m, deterministic)
}
func (m *VirtualRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualRouter.Merge(m, src)
}
func (m *VirtualRouter) XXX_Size() int {
	return xxx_messageInfo_VirtualRouter.Size(m)
}
func (m *VirtualRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualRouter.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualRouter proto.InternalMessageInfo

func (m *VirtualRouter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualRouter) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *VirtualRouter) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *VirtualRouter) GetState() VirtualRouter_VirtualRouterState {
	if m != nil {
		return m.State
	}
	return VirtualRouter_VIRTUAL_ROUTER_UNSPECIFIED
}

func (m *VirtualRouter) GetNetworkInterfaces() []*VirtualRouter_VirtualRouterNetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *VirtualRouter) GetVirtualIp() map[string]*VirtualRouter_VirtualIP {
	if m != nil {
		return m.VirtualIp
	}
	return nil
}

type VirtualRouter_VirtualRouterNetworkInterface struct {
	NetworkName          string   `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	NetworkInterfaceName string   `protobuf:"bytes,2,opt,name=network_interface_name,json=networkInterfaceName,proto3" json:"network_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualRouter_VirtualRouterNetworkInterface) Reset() {
	*m = VirtualRouter_VirtualRouterNetworkInterface{}
}
func (m *VirtualRouter_VirtualRouterNetworkInterface) String() string {
	return proto.CompactTextString(m)
}
func (*VirtualRouter_VirtualRouterNetworkInterface) ProtoMessage() {}
func (*VirtualRouter_VirtualRouterNetworkInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{1, 2}
}

func (m *VirtualRouter_VirtualRouterNetworkInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualRouter_VirtualRouterNetworkInterface.Unmarshal(m, b)
}
func (m *VirtualRouter_VirtualRouterNetworkInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualRouter_VirtualRouterNetworkInterface.Marshal(b, m, deterministic)
}
func (m *VirtualRouter_VirtualRouterNetworkInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualRouter_VirtualRouterNetworkInterface.Merge(m, src)
}
func (m *VirtualRouter_VirtualRouterNetworkInterface) XXX_Size() int {
	return xxx_messageInfo_VirtualRouter_VirtualRouterNetworkInterface.Size(m)
}
func (m *VirtualRouter_VirtualRouterNetworkInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualRouter_VirtualRouterNetworkInterface.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualRouter_VirtualRouterNetworkInterface proto.InternalMessageInfo

func (m *VirtualRouter_VirtualRouterNetworkInterface) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *VirtualRouter_VirtualRouterNetworkInterface) GetNetworkInterfaceName() string {
	if m != nil {
		return m.NetworkInterfaceName
	}
	return ""
}

type VirtualRouter_VirtualIP struct {
	NetworkName          string             `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	NetworkInterfaceName string             `protobuf:"bytes,2,opt,name=network_interface_name,json=networkInterfaceName,proto3" json:"network_interface_name,omitempty"`
	Targets              []*VirtualIPTarget `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *VirtualRouter_VirtualIP) Reset()         { *m = VirtualRouter_VirtualIP{} }
func (m *VirtualRouter_VirtualIP) String() string { return proto.CompactTextString(m) }
func (*VirtualRouter_VirtualIP) ProtoMessage()    {}
func (*VirtualRouter_VirtualIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{1, 3}
}

func (m *VirtualRouter_VirtualIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualRouter_VirtualIP.Unmarshal(m, b)
}
func (m *VirtualRouter_VirtualIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualRouter_VirtualIP.Marshal(b, m, deterministic)
}
func (m *VirtualRouter_VirtualIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualRouter_VirtualIP.Merge(m, src)
}
func (m *VirtualRouter_VirtualIP) XXX_Size() int {
	return xxx_messageInfo_VirtualRouter_VirtualIP.Size(m)
}
func (m *VirtualRouter_VirtualIP) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualRouter_VirtualIP.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualRouter_VirtualIP proto.InternalMessageInfo

func (m *VirtualRouter_VirtualIP) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *VirtualRouter_VirtualIP) GetNetworkInterfaceName() string {
	if m != nil {
		return m.NetworkInterfaceName
	}
	return ""
}

func (m *VirtualRouter_VirtualIP) GetTargets() []*VirtualIPTarget {
	if m != nil {
		return m.Targets
	}
	return nil
}

type CreateVirtualRouterRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateVirtualRouterRequest) Reset()         { *m = CreateVirtualRouterRequest{} }
func (m *CreateVirtualRouterRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualRouterRequest) ProtoMessage()    {}
func (*CreateVirtualRouterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{2}
}

func (m *CreateVirtualRouterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualRouterRequest.Unmarshal(m, b)
}
func (m *CreateVirtualRouterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualRouterRequest.Marshal(b, m, deterministic)
}
func (m *CreateVirtualRouterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualRouterRequest.Merge(m, src)
}
func (m *CreateVirtualRouterRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualRouterRequest.Size(m)
}
func (m *CreateVirtualRouterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualRouterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualRouterRequest proto.InternalMessageInfo

func (m *CreateVirtualRouterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVirtualRouterRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *CreateVirtualRouterRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ListVirtualRoutersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVirtualRoutersRequest) Reset()         { *m = ListVirtualRoutersRequest{} }
func (m *ListVirtualRoutersRequest) String() string { return proto.CompactTextString(m) }
func (*ListVirtualRoutersRequest) ProtoMessage()    {}
func (*ListVirtualRoutersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{3}
}

func (m *ListVirtualRoutersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualRoutersRequest.Unmarshal(m, b)
}
func (m *ListVirtualRoutersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualRoutersRequest.Marshal(b, m, deterministic)
}
func (m *ListVirtualRoutersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualRoutersRequest.Merge(m, src)
}
func (m *ListVirtualRoutersRequest) XXX_Size() int {
	return xxx_messageInfo_ListVirtualRoutersRequest.Size(m)
}
func (m *ListVirtualRoutersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualRoutersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualRoutersRequest proto.InternalMessageInfo

type ListVirtualRoutersResponse struct {
	VirtualRouters       []*VirtualRouter `protobuf:"bytes,1,rep,name=virtual_routers,json=virtualRouters,proto3" json:"virtual_routers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListVirtualRoutersResponse) Reset()         { *m = ListVirtualRoutersResponse{} }
func (m *ListVirtualRoutersResponse) String() string { return proto.CompactTextString(m) }
func (*ListVirtualRoutersResponse) ProtoMessage()    {}
func (*ListVirtualRoutersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{4}
}

func (m *ListVirtualRoutersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualRoutersResponse.Unmarshal(m, b)
}
func (m *ListVirtualRoutersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualRoutersResponse.Marshal(b, m, deterministic)
}
func (m *ListVirtualRoutersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualRoutersResponse.Merge(m, src)
}
func (m *ListVirtualRoutersResponse) XXX_Size() int {
	return xxx_messageInfo_ListVirtualRoutersResponse.Size(m)
}
func (m *ListVirtualRoutersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualRoutersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualRoutersResponse proto.InternalMessageInfo

func (m *ListVirtualRoutersResponse) GetVirtualRouters() []*VirtualRouter {
	if m != nil {
		return m.VirtualRouters
	}
	return nil
}

type GetVirtualRouterRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVirtualRouterRequest) Reset()         { *m = GetVirtualRouterRequest{} }
func (m *GetVirtualRouterRequest) String() string { return proto.CompactTextString(m) }
func (*GetVirtualRouterRequest) ProtoMessage()    {}
func (*GetVirtualRouterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{5}
}

func (m *GetVirtualRouterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualRouterRequest.Unmarshal(m, b)
}
func (m *GetVirtualRouterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualRouterRequest.Marshal(b, m, deterministic)
}
func (m *GetVirtualRouterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualRouterRequest.Merge(m, src)
}
func (m *GetVirtualRouterRequest) XXX_Size() int {
	return xxx_messageInfo_GetVirtualRouterRequest.Size(m)
}
func (m *GetVirtualRouterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualRouterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualRouterRequest proto.InternalMessageInfo

func (m *GetVirtualRouterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteVirtualRouterRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualRouterRequest) Reset()         { *m = DeleteVirtualRouterRequest{} }
func (m *DeleteVirtualRouterRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualRouterRequest) ProtoMessage()    {}
func (*DeleteVirtualRouterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{6}
}

func (m *DeleteVirtualRouterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualRouterRequest.Unmarshal(m, b)
}
func (m *DeleteVirtualRouterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualRouterRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVirtualRouterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualRouterRequest.Merge(m, src)
}
func (m *DeleteVirtualRouterRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualRouterRequest.Size(m)
}
func (m *DeleteVirtualRouterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualRouterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualRouterRequest proto.InternalMessageInfo

func (m *DeleteVirtualRouterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ConnectNetworkRequest struct {
	VirtualRouterName    string            `protobuf:"bytes,1,opt,name=virtual_router_name,json=virtualRouterName,proto3" json:"virtual_router_name,omitempty"`
	NetworkName          string            `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ipv4Address          string            `protobuf:"bytes,4,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string            `protobuf:"bytes,5,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConnectNetworkRequest) Reset()         { *m = ConnectNetworkRequest{} }
func (m *ConnectNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectNetworkRequest) ProtoMessage()    {}
func (*ConnectNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{7}
}

func (m *ConnectNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectNetworkRequest.Unmarshal(m, b)
}
func (m *ConnectNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectNetworkRequest.Marshal(b, m, deterministic)
}
func (m *ConnectNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectNetworkRequest.Merge(m, src)
}
func (m *ConnectNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectNetworkRequest.Size(m)
}
func (m *ConnectNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectNetworkRequest proto.InternalMessageInfo

func (m *ConnectNetworkRequest) GetVirtualRouterName() string {
	if m != nil {
		return m.VirtualRouterName
	}
	return ""
}

func (m *ConnectNetworkRequest) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *ConnectNetworkRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ConnectNetworkRequest) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *ConnectNetworkRequest) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type DisconnectNetworkRequest struct {
	VirtualRouterName    string   `protobuf:"bytes,1,opt,name=virtual_router_name,json=virtualRouterName,proto3" json:"virtual_router_name,omitempty"`
	NetworkName          string   `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectNetworkRequest) Reset()         { *m = DisconnectNetworkRequest{} }
func (m *DisconnectNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectNetworkRequest) ProtoMessage()    {}
func (*DisconnectNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{8}
}

func (m *DisconnectNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectNetworkRequest.Unmarshal(m, b)
}
func (m *DisconnectNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectNetworkRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectNetworkRequest.Merge(m, src)
}
func (m *DisconnectNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectNetworkRequest.Size(m)
}
func (m *DisconnectNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectNetworkRequest proto.InternalMessageInfo

func (m *DisconnectNetworkRequest) GetVirtualRouterName() string {
	if m != nil {
		return m.VirtualRouterName
	}
	return ""
}

func (m *DisconnectNetworkRequest) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

type ApplyVirtualIPRequest struct {
	VirtualRouterName    string             `protobuf:"bytes,1,opt,name=virtual_router_name,json=virtualRouterName,proto3" json:"virtual_router_name,omitempty"`
	VirtualIpName        string             `protobuf:"bytes,2,opt,name=virtual_ip_name,json=virtualIpName,proto3" json:"virtual_ip_name,omitempty"`
	NetworkName          string             `protobuf:"bytes,3,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Annotations          map[string]string  `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ipv4Address          string             `protobuf:"bytes,5,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string             `protobuf:"bytes,6,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Targets              []*VirtualIPTarget `protobuf:"bytes,7,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ApplyVirtualIPRequest) Reset()         { *m = ApplyVirtualIPRequest{} }
func (m *ApplyVirtualIPRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyVirtualIPRequest) ProtoMessage()    {}
func (*ApplyVirtualIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{9}
}

func (m *ApplyVirtualIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyVirtualIPRequest.Unmarshal(m, b)
}
func (m *ApplyVirtualIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyVirtualIPRequest.Marshal(b, m, deterministic)
}
func (m *ApplyVirtualIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyVirtualIPRequest.Merge(m, src)
}
func (m *ApplyVirtualIPRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyVirtualIPRequest.Size(m)
}
func (m *ApplyVirtualIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyVirtualIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyVirtualIPRequest proto.InternalMessageInfo

func (m *ApplyVirtualIPRequest) GetVirtualRouterName() string {
	if m != nil {
		return m.VirtualRouterName
	}
	return ""
}

func (m *ApplyVirtualIPRequest) GetVirtualIpName() string {
	if m != nil {
		return m.VirtualIpName
	}
	return ""
}

func (m *ApplyVirtualIPRequest) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *ApplyVirtualIPRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ApplyVirtualIPRequest) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *ApplyVirtualIPRequest) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *ApplyVirtualIPRequest) GetTargets() []*VirtualIPTarget {
	if m != nil {
		return m.Targets
	}
	return nil
}

type DeleteVirtualIPRequest struct {
	VirtualRouterName    string   `protobuf:"bytes,1,opt,name=virtual_router_name,json=virtualRouterName,proto3" json:"virtual_router_name,omitempty"`
	VirtualIpName        string   `protobuf:"bytes,2,opt,name=virtual_ip_name,json=virtualIpName,proto3" json:"virtual_ip_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualIPRequest) Reset()         { *m = DeleteVirtualIPRequest{} }
func (m *DeleteVirtualIPRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualIPRequest) ProtoMessage()    {}
func (*DeleteVirtualIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b13bdc72423f1fd6, []int{10}
}

func (m *DeleteVirtualIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualIPRequest.Unmarshal(m, b)
}
func (m *DeleteVirtualIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualIPRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVirtualIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualIPRequest.Merge(m, src)
}
func (m *DeleteVirtualIPRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualIPRequest.Size(m)
}
func (m *DeleteVirtualIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualIPRequest proto.InternalMessageInfo

func (m *DeleteVirtualIPRequest) GetVirtualRouterName() string {
	if m != nil {
		return m.VirtualRouterName
	}
	return ""
}

func (m *DeleteVirtualIPRequest) GetVirtualIpName() string {
	if m != nil {
		return m.VirtualIpName
	}
	return ""
}

func init() {
	proto.RegisterEnum("n0stack.provisioning.v0.VirtualRouter_VirtualRouterState", VirtualRouter_VirtualRouterState_name, VirtualRouter_VirtualRouterState_value)
	proto.RegisterType((*VirtualIPTarget)(nil), "n0stack.provisioning.v0.VirtualIPTarget")
	proto.RegisterType((*VirtualRouter)(nil), "n0stack.provisioning.v0.VirtualRouter")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.VirtualRouter.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.VirtualRouter.LabelsEntry")
	proto.RegisterMapType((map[string]*VirtualRouter_VirtualIP)(nil), "n0stack.provisioning.v0.VirtualRouter.VirtualIpEntry")
	proto.RegisterType((*VirtualRouter_VirtualRouterNetworkInterface)(nil), "n0stack.provisioning.v0.VirtualRouter.VirtualRouterNetworkInterface")
	proto.RegisterType((*VirtualRouter_VirtualIP)(nil), "n0stack.provisioning.v0.VirtualRouter.VirtualIP")
	proto.RegisterType((*CreateVirtualRouterRequest)(nil), "n0stack.provisioning.v0.CreateVirtualRouterRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.CreateVirtualRouterRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.CreateVirtualRouterRequest.LabelsEntry")
	proto.RegisterType((*ListVirtualRoutersRequest)(nil), "n0stack.provisioning.v0.ListVirtualRoutersRequest")
	proto.RegisterType((*ListVirtualRoutersResponse)(nil), "n0stack.provisioning.v0.ListVirtualRoutersResponse")
	proto.RegisterType((*GetVirtualRouterRequest)(nil), "n0stack.provisioning.v0.GetVirtualRouterRequest")
	proto.RegisterType((*DeleteVirtualRouterRequest)(nil), "n0stack.provisioning.v0.DeleteVirtualRouterRequest")
	proto.RegisterType((*ConnectNetworkRequest)(nil), "n0stack.provisioning.v0.ConnectNetworkRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.ConnectNetworkRequest.AnnotationsEntry")
	proto.RegisterType((*DisconnectNetworkRequest)(nil), "n0stack.provisioning.v0.DisconnectNetworkRequest")
	proto.RegisterType((*ApplyVirtualIPRequest)(nil), "n0stack.provisioning.v0.ApplyVirtualIPRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.ApplyVirtualIPRequest.AnnotationsEntry")
	proto.RegisterType((*DeleteVirtualIPRequest)(nil), "n0stack.provisioning.v0.DeleteVirtualIPRequest")
}

func init() {
	proto.RegisterFile("n0stack/provisioning/v0/virtual_router.proto", fileDescriptor_b13bdc72423f1fd6)
}

var fileDescriptor_b13bdc72423f1fd6 = []byte{
	// 1048 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x51, 0x6f, 0xdb, 0x54,
	0x14, 0xc6, 0xc9, 0xba, 0xd2, 0x93, 0x35, 0x4d, 0x4f, 0xbb, 0x2e, 0x78, 0x6c, 0x74, 0x96, 0x98,
	0xaa, 0x0a, 0xec, 0x90, 0x96, 0x8e, 0x02, 0x62, 0x4a, 0x13, 0x6f, 0x32, 0x8d, 0xd2, 0xe2, 0xb5,
	0x9d, 0x40, 0x42, 0x91, 0x9b, 0xdd, 0x06, 0xd3, 0xc4, 0x36, 0xf6, 0x8d, 0xa1, 0x9a, 0xfa, 0xc2,
	0x1b, 0xaf, 0xec, 0x99, 0x57, 0x04, 0xbf, 0x01, 0x21, 0xf8, 0x0f, 0x13, 0xff, 0x80, 0x47, 0x7e,
	0x04, 0xca, 0xb5, 0xdd, 0xd8, 0x89, 0xdd, 0x38, 0x99, 0x0a, 0x4f, 0xc9, 0xf5, 0x3d, 0xf7, 0x9c,
	0xef, 0x9e, 0xf3, 0x9d, 0xef, 0xfa, 0x1a, 0xde, 0x31, 0x4a, 0x0e, 0xd5, 0x5a, 0xa7, 0x92, 0x65,
	0x9b, 0xae, 0xee, 0xe8, 0xa6, 0xa1, 0x1b, 0x6d, 0xc9, 0x2d, 0x49, 0xae, 0x6e, 0xd3, 0x9e, 0xd6,
	0x69, 0xda, 0x66, 0x8f, 0x12, 0x5b, 0xb4, 0x6c, 0x93, 0x9a, 0x78, 0xcb, 0xb7, 0x16, 0xc3, 0xd6,
	0xa2, 0x5b, 0xe2, 0xdf, 0x6c, 0x9b, 0x66, 0xbb, 0x43, 0x24, 0xcd, 0xd2, 0x25, 0xcd, 0x30, 0x4c,
	0xaa, 0x51, 0xdd, 0x34, 0x1c, 0x6f, 0x19, 0x7f, 0xdb, 0x9f, 0x65, 0xa3, 0xe3, 0xde, 0x89, 0x44,
	0xba, 0x16, 0x3d, 0xf3, 0x26, 0x85, 0xaf, 0x61, 0xe1, 0xc8, 0x8b, 0xa5, 0xec, 0x1f, 0x68, 0x76,
	0x9b, 0x50, 0xbc, 0x07, 0x37, 0x0c, 0x42, 0xbf, 0x35, 0xed, 0xd3, 0xa6, 0xa1, 0x75, 0x49, 0x91,
	0x5b, 0xe5, 0xd6, 0xe6, 0xd4, 0x9c, 0xff, 0xac, 0xa1, 0x75, 0x09, 0x6e, 0xc2, 0x4a, 0x60, 0xa2,
	0x1b, 0x94, 0xd8, 0x27, 0x5a, 0x8b, 0x78, 0xc6, 0x19, 0x66, 0xbc, 0xec, 0xcf, 0x2a, 0xc1, 0x64,
	0x7f, 0x95, 0xf0, 0xd7, 0xeb, 0x30, 0xef, 0x07, 0x53, 0xd9, 0xbe, 0x10, 0xe1, 0x5a, 0x28, 0x04,
	0xfb, 0x8f, 0x9f, 0x43, 0x2e, 0xb4, 0x87, 0x62, 0x76, 0x35, 0xbb, 0x96, 0x2b, 0x3f, 0x10, 0x13,
	0xf6, 0x2e, 0x46, 0x1c, 0x8a, 0x95, 0xc1, 0x4a, 0xd9, 0xa0, 0xf6, 0x99, 0x1a, 0xf6, 0x85, 0x9f,
	0xc2, 0xf5, 0x8e, 0x76, 0x4c, 0x3a, 0x4e, 0xf1, 0x1a, 0xf3, 0x5a, 0x4e, 0xe9, 0xb5, 0xce, 0x16,
	0x79, 0x0e, 0x7d, 0x0f, 0xb8, 0x07, 0x33, 0x0e, 0xd5, 0x28, 0x29, 0x96, 0x57, 0xb9, 0xb5, 0x7c,
	0x79, 0x3b, 0xa5, 0xab, 0xc8, 0xe8, 0x49, 0xdf, 0x81, 0xea, 0xf9, 0x41, 0x07, 0x70, 0x24, 0xa7,
	0x4e, 0x71, 0x83, 0x01, 0xad, 0x4d, 0xe3, 0xbd, 0x31, 0x54, 0x03, 0x75, 0x71, 0xb8, 0x2a, 0x0e,
	0x1e, 0x00, 0x04, 0x54, 0xd3, 0xad, 0xe2, 0x26, 0x0b, 0xf6, 0xfe, 0x64, 0xc1, 0x14, 0xcb, 0x4b,
	0xcc, 0x9c, 0x1b, 0x8c, 0xf9, 0x4f, 0xa0, 0x30, 0x5c, 0x08, 0x2c, 0x40, 0xf6, 0x94, 0x9c, 0xf9,
	0x95, 0xee, 0xff, 0xc5, 0x65, 0x98, 0x71, 0xb5, 0x4e, 0x2f, 0xe0, 0x8c, 0x37, 0xf8, 0x30, 0xf3,
	0x01, 0xc7, 0x6f, 0x43, 0x2e, 0x94, 0xf2, 0x89, 0x96, 0x7e, 0x07, 0x77, 0x2e, 0x4d, 0xc2, 0x95,
	0xb1, 0x9b, 0xff, 0x85, 0x83, 0xb9, 0x8b, 0x56, 0xba, 0xb2, 0x30, 0xb8, 0x03, 0xb3, 0x94, 0xf5,
	0x69, 0xd0, 0x1a, 0x6b, 0xe3, 0xca, 0x15, 0x34, 0xb6, 0x1a, 0x2c, 0xe4, 0x0d, 0xc8, 0x47, 0x8b,
	0x17, 0x93, 0xe2, 0x47, 0xe1, 0x14, 0xe7, 0xca, 0xa5, 0x09, 0x49, 0xb1, 0x1f, 0x2a, 0x8a, 0xf0,
	0x25, 0xe0, 0x28, 0xef, 0xf1, 0x2e, 0xf0, 0x47, 0x8a, 0x7a, 0x70, 0x58, 0xa9, 0x37, 0xd5, 0xbd,
	0xc3, 0x03, 0x59, 0x6d, 0x1e, 0x36, 0x9e, 0xec, 0xcb, 0x55, 0xe5, 0x91, 0x22, 0xd7, 0x0a, 0xaf,
	0x61, 0x0e, 0x66, 0x0f, 0x1b, 0xbb, 0x8d, 0xbd, 0xa7, 0x8d, 0x02, 0xd7, 0x1f, 0xec, 0xcb, 0x8d,
	0x9a, 0xd2, 0x78, 0x5c, 0xc8, 0xe0, 0x3c, 0xcc, 0x55, 0x8e, 0x2a, 0x4a, 0xbd, 0xb2, 0x53, 0x97,
	0x0b, 0x59, 0xe1, 0x9f, 0x0c, 0xf0, 0x55, 0x9b, 0x68, 0x94, 0x44, 0xa2, 0xa8, 0xe4, 0x9b, 0x1e,
	0x71, 0x68, 0xac, 0xc8, 0x9c, 0xc4, 0x89, 0x4c, 0x72, 0x97, 0x25, 0x7b, 0x1f, 0xa3, 0x38, 0x4f,
	0x87, 0x14, 0xe7, 0xe1, 0x34, 0x21, 0x62, 0xe4, 0xe7, 0x7f, 0x6c, 0x31, 0xe1, 0x36, 0xbc, 0x51,
	0xd7, 0x1d, 0x1a, 0x81, 0xea, 0xf8, 0x58, 0x85, 0x2e, 0xf0, 0x71, 0x93, 0x8e, 0x65, 0x1a, 0x0e,
	0xc1, 0x3d, 0x58, 0x88, 0x9e, 0x6c, 0x4e, 0x91, 0x63, 0x79, 0xb9, 0x9f, 0x8e, 0x5e, 0x6a, 0xde,
	0x8d, 0x38, 0x16, 0xde, 0x85, 0x5b, 0x8f, 0x09, 0x4d, 0x5b, 0x76, 0xa1, 0x04, 0x7c, 0x8d, 0x74,
	0x48, 0x7a, 0xa2, 0x08, 0x2f, 0x33, 0x70, 0xb3, 0x6a, 0x1a, 0x06, 0x69, 0x51, 0x5f, 0x4a, 0x02,
	0x6b, 0x11, 0x96, 0xa2, 0x7b, 0x09, 0x37, 0xfa, 0x62, 0x04, 0x27, 0x6b, 0xdc, 0x61, 0x45, 0xc8,
	0x8c, 0x2a, 0x82, 0x16, 0xc7, 0xca, 0x4b, 0x28, 0x13, 0x87, 0x6b, 0x0c, 0x21, 0xef, 0xc1, 0x0d,
	0xdd, 0x72, 0x37, 0x9b, 0xda, 0xb3, 0x67, 0x36, 0x71, 0xfa, 0xb4, 0x64, 0x28, 0xfa, 0xcf, 0x2a,
	0xde, 0x23, 0xdf, 0x64, 0xeb, 0xc2, 0x64, 0xe6, 0xc2, 0x64, 0xcb, 0x37, 0x79, 0x55, 0xf6, 0x09,
	0x5d, 0x28, 0xd6, 0x74, 0xa7, 0xf5, 0x1f, 0xe5, 0x55, 0xf8, 0x23, 0x0b, 0x37, 0x2b, 0x96, 0xd5,
	0x39, 0x1b, 0xa8, 0xd3, 0x94, 0xc1, 0xee, 0x0f, 0x08, 0xac, 0x5b, 0xe1, 0x78, 0xf3, 0x17, 0xa7,
	0x5f, 0x2c, 0xa8, 0xec, 0xd8, 0x62, 0x8f, 0xd3, 0x87, 0x58, 0xfc, 0x13, 0x16, 0x7b, 0x66, 0x7c,
	0xb1, 0xaf, 0x8f, 0x14, 0x3b, 0x7c, 0xe2, 0xcc, 0x4e, 0x7b, 0xe2, 0xbc, 0x2a, 0x61, 0x2c, 0x58,
	0x89, 0x34, 0xee, 0x95, 0x57, 0xb0, 0xfc, 0x27, 0xc0, 0x72, 0xf4, 0xd0, 0x22, 0xb6, 0xab, 0xb7,
	0x08, 0xfe, 0xc8, 0xc1, 0x52, 0x8c, 0x58, 0xe3, 0xc6, 0x14, 0xd2, 0xce, 0xa7, 0xd4, 0x3d, 0xe1,
	0xee, 0xf7, 0x2f, 0xff, 0x7e, 0x91, 0x29, 0x0a, 0x2b, 0xec, 0x1d, 0x7f, 0xe4, 0x82, 0x80, 0x3f,
	0x71, 0x80, 0xa3, 0xba, 0x8b, 0xc9, 0x2f, 0xb8, 0x89, 0x0a, 0xce, 0x6f, 0x4c, 0xb4, 0xc6, 0x13,
	0xf6, 0x00, 0x1f, 0x26, 0xe1, 0x7b, 0xc1, 0x41, 0x61, 0x58, 0xa8, 0x31, 0xf9, 0x9d, 0x22, 0x41,
	0xd3, 0x53, 0xa7, 0xeb, 0x6d, 0x06, 0xe7, 0x2d, 0xbc, 0x13, 0x0f, 0x47, 0x7a, 0xde, 0xaf, 0xfb,
	0x39, 0xfe, 0xc0, 0xc1, 0x52, 0xcc, 0x79, 0x70, 0x49, 0x29, 0x93, 0x4f, 0x0f, 0x7e, 0x45, 0xf4,
	0xee, 0x59, 0x62, 0x70, 0xcf, 0x12, 0xe5, 0xfe, 0x3d, 0x2b, 0xc0, 0xb2, 0x3e, 0x06, 0xcb, 0xcf,
	0x1c, 0xe4, 0xa3, 0x82, 0x8e, 0xe2, 0x64, 0xca, 0x9f, 0x3a, 0x3b, 0x1f, 0x33, 0x44, 0x5b, 0xc2,
	0x66, 0x12, 0xa2, 0x98, 0x86, 0x3a, 0x97, 0x7c, 0xed, 0xc2, 0xdf, 0x38, 0x58, 0x1c, 0x11, 0x6f,
	0x7c, 0x2f, 0x39, 0x65, 0x09, 0x42, 0x9f, 0x1a, 0xee, 0x2e, 0x83, 0x2b, 0xaf, 0x57, 0xa7, 0x81,
	0x2b, 0x3d, 0x0f, 0xeb, 0xf0, 0x39, 0xfe, 0xca, 0x41, 0x3e, 0x2a, 0xa5, 0x97, 0xa4, 0x39, 0x56,
	0x73, 0x53, 0xe3, 0x7e, 0xc8, 0x70, 0x6f, 0x0b, 0x0f, 0x26, 0xc2, 0x3d, 0x10, 0x27, 0xfc, 0x9d,
	0x83, 0x85, 0x21, 0xd5, 0x43, 0x29, 0x1d, 0x35, 0x27, 0x47, 0xfb, 0x19, 0x43, 0xbb, 0xbb, 0xae,
	0x4c, 0x89, 0x76, 0x60, 0xe0, 0xcb, 0xea, 0xf9, 0x8e, 0xfc, 0x45, 0xb5, 0xad, 0xd3, 0xaf, 0x7a,
	0xc7, 0x62, 0xcb, 0xec, 0x4a, 0xc1, 0xa7, 0x8e, 0xc1, 0x2f, 0x6b, 0x14, 0xb1, 0x6d, 0x0e, 0x7f,
	0xfd, 0xf8, 0xc8, 0x0a, 0x3f, 0x38, 0xbe, 0xce, 0xec, 0x36, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xf5, 0x04, 0xfb, 0xf4, 0x2d, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualRouterServiceClient is the client API for VirtualRouterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualRouterServiceClient interface {
	CreateVirtualRouter(ctx context.Context, in *CreateVirtualRouterRequest, opts ...grpc.CallOption) (*VirtualRouter, error)
	ListVirtualRouters(ctx context.Context, in *ListVirtualRoutersRequest, opts ...grpc.CallOption) (*ListVirtualRoutersResponse, error)
	GetVirtualRouter(ctx context.Context, in *GetVirtualRouterRequest, opts ...grpc.CallOption) (*VirtualRouter, error)
	// rpc UpdateVirtualRouter(UpdateVirtualRouterRequest) returns (VirtualRouter) {}
	DeleteVirtualRouter(ctx context.Context, in *DeleteVirtualRouterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ConnectNetwork(ctx context.Context, in *ConnectNetworkRequest, opts ...grpc.CallOption) (*VirtualRouter, error)
	DisconnectNetwork(ctx context.Context, in *DisconnectNetworkRequest, opts ...grpc.CallOption) (*VirtualRouter, error)
	ApplyVirtualIP(ctx context.Context, in *ApplyVirtualIPRequest, opts ...grpc.CallOption) (*VirtualRouter, error)
	DeleteVirtualIP(ctx context.Context, in *DeleteVirtualIPRequest, opts ...grpc.CallOption) (*VirtualRouter, error)
}

type virtualRouterServiceClient struct {
	cc *grpc.ClientConn
}

func NewVirtualRouterServiceClient(cc *grpc.ClientConn) VirtualRouterServiceClient {
	return &virtualRouterServiceClient{cc}
}

func (c *virtualRouterServiceClient) CreateVirtualRouter(ctx context.Context, in *CreateVirtualRouterRequest, opts ...grpc.CallOption) (*VirtualRouter, error) {
	out := new(VirtualRouter)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/CreateVirtualRouter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualRouterServiceClient) ListVirtualRouters(ctx context.Context, in *ListVirtualRoutersRequest, opts ...grpc.CallOption) (*ListVirtualRoutersResponse, error) {
	out := new(ListVirtualRoutersResponse)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/ListVirtualRouters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualRouterServiceClient) GetVirtualRouter(ctx context.Context, in *GetVirtualRouterRequest, opts ...grpc.CallOption) (*VirtualRouter, error) {
	out := new(VirtualRouter)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/GetVirtualRouter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualRouterServiceClient) DeleteVirtualRouter(ctx context.Context, in *DeleteVirtualRouterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/DeleteVirtualRouter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualRouterServiceClient) ConnectNetwork(ctx context.Context, in *ConnectNetworkRequest, opts ...grpc.CallOption) (*VirtualRouter, error) {
	out := new(VirtualRouter)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/ConnectNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualRouterServiceClient) DisconnectNetwork(ctx context.Context, in *DisconnectNetworkRequest, opts ...grpc.CallOption) (*VirtualRouter, error) {
	out := new(VirtualRouter)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/DisconnectNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualRouterServiceClient) ApplyVirtualIP(ctx context.Context, in *ApplyVirtualIPRequest, opts ...grpc.CallOption) (*VirtualRouter, error) {
	out := new(VirtualRouter)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/ApplyVirtualIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualRouterServiceClient) DeleteVirtualIP(ctx context.Context, in *DeleteVirtualIPRequest, opts ...grpc.CallOption) (*VirtualRouter, error) {
	out := new(VirtualRouter)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualRouterService/DeleteVirtualIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualRouterServiceServer is the server API for VirtualRouterService service.
type VirtualRouterServiceServer interface {
	CreateVirtualRouter(context.Context, *CreateVirtualRouterRequest) (*VirtualRouter, error)
	ListVirtualRouters(context.Context, *ListVirtualRoutersRequest) (*ListVirtualRoutersResponse, error)
	GetVirtualRouter(context.Context, *GetVirtualRouterRequest) (*VirtualRouter, error)
	// rpc UpdateVirtualRouter(UpdateVirtualRouterRequest) returns (VirtualRouter) {}
	DeleteVirtualRouter(context.Context, *DeleteVirtualRouterRequest) (*empty.Empty, error)
	ConnectNetwork(context.Context, *ConnectNetworkRequest) (*VirtualRouter, error)
	DisconnectNetwork(context.Context, *DisconnectNetworkRequest) (*VirtualRouter, error)
	ApplyVirtualIP(context.Context, *ApplyVirtualIPRequest) (*VirtualRouter, error)
	DeleteVirtualIP(context.Context, *DeleteVirtualIPRequest) (*VirtualRouter, error)
}

// UnimplementedVirtualRouterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualRouterServiceServer struct {
}

func (*UnimplementedVirtualRouterServiceServer) CreateVirtualRouter(ctx context.Context, req *CreateVirtualRouterRequest) (*VirtualRouter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtualRouter not implemented")
}
func (*UnimplementedVirtualRouterServiceServer) ListVirtualRouters(ctx context.Context, req *ListVirtualRoutersRequest) (*ListVirtualRoutersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtualRouters not implemented")
}
func (*UnimplementedVirtualRouterServiceServer) GetVirtualRouter(ctx context.Context, req *GetVirtualRouterRequest) (*VirtualRouter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtualRouter not implemented")
}
func (*UnimplementedVirtualRouterServiceServer) DeleteVirtualRouter(ctx context.Context, req *DeleteVirtualRouterRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtualRouter not implemented")
}
func (*UnimplementedVirtualRouterServiceServer) ConnectNetwork(ctx context.Context, req *ConnectNetworkRequest) (*VirtualRouter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectNetwork not implemented")
}
func (*UnimplementedVirtualRouterServiceServer) DisconnectNetwork(ctx context.Context, req *DisconnectNetworkRequest) (*VirtualRouter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisconnectNetwork not implemented")
}
func (*UnimplementedVirtualRouterServiceServer) ApplyVirtualIP(ctx context.Context, req *ApplyVirtualIPRequest) (*VirtualRouter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyVirtualIP not implemented")
}
func (*UnimplementedVirtualRouterServiceServer) DeleteVirtualIP(ctx context.Context, req *DeleteVirtualIPRequest) (*VirtualRouter, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtualIP not implemented")
}

func RegisterVirtualRouterServiceServer(s *grpc.Server, srv VirtualRouterServiceServer) {
	s.RegisterService(&_VirtualRouterService_serviceDesc, srv)
}

func _VirtualRouterService_CreateVirtualRouter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtualRouterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).CreateVirtualRouter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/CreateVirtualRouter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).CreateVirtualRouter(ctx, req.(*CreateVirtualRouterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualRouterService_ListVirtualRouters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtualRoutersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).ListVirtualRouters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/ListVirtualRouters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).ListVirtualRouters(ctx, req.(*ListVirtualRoutersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualRouterService_GetVirtualRouter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtualRouterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).GetVirtualRouter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/GetVirtualRouter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).GetVirtualRouter(ctx, req.(*GetVirtualRouterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualRouterService_DeleteVirtualRouter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtualRouterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).DeleteVirtualRouter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/DeleteVirtualRouter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).DeleteVirtualRouter(ctx, req.(*DeleteVirtualRouterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualRouterService_ConnectNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).ConnectNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/ConnectNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).ConnectNetwork(ctx, req.(*ConnectNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualRouterService_DisconnectNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).DisconnectNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/DisconnectNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).DisconnectNetwork(ctx, req.(*DisconnectNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualRouterService_ApplyVirtualIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyVirtualIPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).ApplyVirtualIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/ApplyVirtualIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).ApplyVirtualIP(ctx, req.(*ApplyVirtualIPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualRouterService_DeleteVirtualIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtualIPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualRouterServiceServer).DeleteVirtualIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualRouterService/DeleteVirtualIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualRouterServiceServer).DeleteVirtualIP(ctx, req.(*DeleteVirtualIPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualRouterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.provisioning.v0.VirtualRouterService",
	HandlerType: (*VirtualRouterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVirtualRouter",
			Handler:    _VirtualRouterService_CreateVirtualRouter_Handler,
		},
		{
			MethodName: "ListVirtualRouters",
			Handler:    _VirtualRouterService_ListVirtualRouters_Handler,
		},
		{
			MethodName: "GetVirtualRouter",
			Handler:    _VirtualRouterService_GetVirtualRouter_Handler,
		},
		{
			MethodName: "DeleteVirtualRouter",
			Handler:    _VirtualRouterService_DeleteVirtualRouter_Handler,
		},
		{
			MethodName: "ConnectNetwork",
			Handler:    _VirtualRouterService_ConnectNetwork_Handler,
		},
		{
			MethodName: "DisconnectNetwork",
			Handler:    _VirtualRouterService_DisconnectNetwork_Handler,
		},
		{
			MethodName: "ApplyVirtualIP",
			Handler:    _VirtualRouterService_ApplyVirtualIP_Handler,
		},
		{
			MethodName: "DeleteVirtualIP",
			Handler:    _VirtualRouterService_DeleteVirtualIP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "n0stack/provisioning/v0/virtual_router.proto",
}
