// Code generated by protoc-gen-go. DO NOT EDIT.
// source: n0stack/provisioning/v0/virtual_machine.proto

package pprovisioning

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VirtualMachine_VirtualMachineState int32

const (
	VirtualMachine_VIRTUAL_MACHINE_UNSPECIFIED VirtualMachine_VirtualMachineState = 0
	// working API
	VirtualMachine_PENDING VirtualMachine_VirtualMachineState = 1
	// running vm
	VirtualMachine_RUNNING  VirtualMachine_VirtualMachineState = 2
	VirtualMachine_SHUTDOWN VirtualMachine_VirtualMachineState = 3
	VirtualMachine_PAUSED   VirtualMachine_VirtualMachineState = 4
)

var VirtualMachine_VirtualMachineState_name = map[int32]string{
	0: "VIRTUAL_MACHINE_UNSPECIFIED",
	1: "PENDING",
	2: "RUNNING",
	3: "SHUTDOWN",
	4: "PAUSED",
}

var VirtualMachine_VirtualMachineState_value = map[string]int32{
	"VIRTUAL_MACHINE_UNSPECIFIED": 0,
	"PENDING":                     1,
	"RUNNING":                     2,
	"SHUTDOWN":                    3,
	"PAUSED":                      4,
}

func (x VirtualMachine_VirtualMachineState) String() string {
	return proto.EnumName(VirtualMachine_VirtualMachineState_name, int32(x))
}

func (VirtualMachine_VirtualMachineState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{1, 0}
}

type VirtualMachineNIC struct {
	NetworkName          string            `protobuf:"bytes,1,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HardwareAddress      string            `protobuf:"bytes,2,opt,name=hardware_address,json=hardwareAddress,proto3" json:"hardware_address,omitempty"`
	Ipv4Address          string            `protobuf:"bytes,3,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string            `protobuf:"bytes,4,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VirtualMachineNIC) Reset()         { *m = VirtualMachineNIC{} }
func (m *VirtualMachineNIC) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineNIC) ProtoMessage()    {}
func (*VirtualMachineNIC) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{0}
}

func (m *VirtualMachineNIC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineNIC.Unmarshal(m, b)
}
func (m *VirtualMachineNIC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineNIC.Marshal(b, m, deterministic)
}
func (m *VirtualMachineNIC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineNIC.Merge(m, src)
}
func (m *VirtualMachineNIC) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineNIC.Size(m)
}
func (m *VirtualMachineNIC) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineNIC.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineNIC proto.InternalMessageInfo

func (m *VirtualMachineNIC) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *VirtualMachineNIC) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *VirtualMachineNIC) GetHardwareAddress() string {
	if m != nil {
		return m.HardwareAddress
	}
	return ""
}

func (m *VirtualMachineNIC) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *VirtualMachineNIC) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type VirtualMachine struct {
	// Name is a unique field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Annotations can store metadata used by the system for control.
	// In particular, implementation-dependent fields that can not be set as protobuf fields are targeted.
	// The control specified by n0stack may delete metadata specified by the user.
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Labels stores user-defined metadata.
	// The n0stack system must not rewrite this value.
	Labels                map[string]string                  `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequestCpuMilliCore   uint32                             `protobuf:"varint,10,opt,name=request_cpu_milli_core,json=requestCpuMilliCore,proto3" json:"request_cpu_milli_core,omitempty"`
	LimitCpuMilliCore     uint32                             `protobuf:"varint,11,opt,name=limit_cpu_milli_core,json=limitCpuMilliCore,proto3" json:"limit_cpu_milli_core,omitempty"`
	RequestMemoryBytes    uint64                             `protobuf:"varint,12,opt,name=request_memory_bytes,json=requestMemoryBytes,proto3" json:"request_memory_bytes,omitempty"`
	LimitMemoryBytes      uint64                             `protobuf:"varint,13,opt,name=limit_memory_bytes,json=limitMemoryBytes,proto3" json:"limit_memory_bytes,omitempty"`
	BlockStorageNames     []string                           `protobuf:"bytes,14,rep,name=block_storage_names,json=blockStorageNames,proto3" json:"block_storage_names,omitempty"`
	Nics                  []*VirtualMachineNIC               `protobuf:"bytes,15,rep,name=nics,proto3" json:"nics,omitempty"`
	Uuid                  string                             `protobuf:"bytes,16,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LoginUsername         string                             `protobuf:"bytes,17,opt,name=login_username,json=loginUsername,proto3" json:"login_username,omitempty"`
	SshAuthorizedKeys     []string                           `protobuf:"bytes,18,rep,name=ssh_authorized_keys,json=sshAuthorizedKeys,proto3" json:"ssh_authorized_keys,omitempty"`
	State                 VirtualMachine_VirtualMachineState `protobuf:"varint,50,opt,name=state,proto3,enum=n0stack.provisioning.v0.VirtualMachine_VirtualMachineState" json:"state,omitempty"`
	ComputeNodeName       string                             `protobuf:"bytes,52,opt,name=compute_node_name,json=computeNodeName,proto3" json:"compute_node_name,omitempty"`
	ComputeName           string                             `protobuf:"bytes,53,opt,name=compute_name,json=computeName,proto3" json:"compute_name,omitempty"`
	NetworkInterfaceNames []string                           `protobuf:"bytes,54,rep,name=network_interface_names,json=networkInterfaceNames,proto3" json:"network_interface_names,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                           `json:"-"`
	XXX_unrecognized      []byte                             `json:"-"`
	XXX_sizecache         int32                              `json:"-"`
}

func (m *VirtualMachine) Reset()         { *m = VirtualMachine{} }
func (m *VirtualMachine) String() string { return proto.CompactTextString(m) }
func (*VirtualMachine) ProtoMessage()    {}
func (*VirtualMachine) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{1}
}

func (m *VirtualMachine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachine.Unmarshal(m, b)
}
func (m *VirtualMachine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachine.Marshal(b, m, deterministic)
}
func (m *VirtualMachine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachine.Merge(m, src)
}
func (m *VirtualMachine) XXX_Size() int {
	return xxx_messageInfo_VirtualMachine.Size(m)
}
func (m *VirtualMachine) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachine.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachine proto.InternalMessageInfo

func (m *VirtualMachine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualMachine) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *VirtualMachine) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *VirtualMachine) GetRequestCpuMilliCore() uint32 {
	if m != nil {
		return m.RequestCpuMilliCore
	}
	return 0
}

func (m *VirtualMachine) GetLimitCpuMilliCore() uint32 {
	if m != nil {
		return m.LimitCpuMilliCore
	}
	return 0
}

func (m *VirtualMachine) GetRequestMemoryBytes() uint64 {
	if m != nil {
		return m.RequestMemoryBytes
	}
	return 0
}

func (m *VirtualMachine) GetLimitMemoryBytes() uint64 {
	if m != nil {
		return m.LimitMemoryBytes
	}
	return 0
}

func (m *VirtualMachine) GetBlockStorageNames() []string {
	if m != nil {
		return m.BlockStorageNames
	}
	return nil
}

func (m *VirtualMachine) GetNics() []*VirtualMachineNIC {
	if m != nil {
		return m.Nics
	}
	return nil
}

func (m *VirtualMachine) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *VirtualMachine) GetLoginUsername() string {
	if m != nil {
		return m.LoginUsername
	}
	return ""
}

func (m *VirtualMachine) GetSshAuthorizedKeys() []string {
	if m != nil {
		return m.SshAuthorizedKeys
	}
	return nil
}

func (m *VirtualMachine) GetState() VirtualMachine_VirtualMachineState {
	if m != nil {
		return m.State
	}
	return VirtualMachine_VIRTUAL_MACHINE_UNSPECIFIED
}

func (m *VirtualMachine) GetComputeNodeName() string {
	if m != nil {
		return m.ComputeNodeName
	}
	return ""
}

func (m *VirtualMachine) GetComputeName() string {
	if m != nil {
		return m.ComputeName
	}
	return ""
}

func (m *VirtualMachine) GetNetworkInterfaceNames() []string {
	if m != nil {
		return m.NetworkInterfaceNames
	}
	return nil
}

type CreateVirtualMachineRequest struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Annotations          map[string]string    `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string    `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequestCpuMilliCore  uint32               `protobuf:"varint,10,opt,name=request_cpu_milli_core,json=requestCpuMilliCore,proto3" json:"request_cpu_milli_core,omitempty"`
	LimitCpuMilliCore    uint32               `protobuf:"varint,11,opt,name=limit_cpu_milli_core,json=limitCpuMilliCore,proto3" json:"limit_cpu_milli_core,omitempty"`
	RequestMemoryBytes   uint64               `protobuf:"varint,12,opt,name=request_memory_bytes,json=requestMemoryBytes,proto3" json:"request_memory_bytes,omitempty"`
	LimitMemoryBytes     uint64               `protobuf:"varint,13,opt,name=limit_memory_bytes,json=limitMemoryBytes,proto3" json:"limit_memory_bytes,omitempty"`
	BlockStorageNames    []string             `protobuf:"bytes,14,rep,name=block_storage_names,json=blockStorageNames,proto3" json:"block_storage_names,omitempty"`
	Nics                 []*VirtualMachineNIC `protobuf:"bytes,15,rep,name=nics,proto3" json:"nics,omitempty"`
	Uuid                 string               `protobuf:"bytes,16,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LoginUsername        string               `protobuf:"bytes,17,opt,name=login_username,json=loginUsername,proto3" json:"login_username,omitempty"`
	SshAuthorizedKeys    []string             `protobuf:"bytes,18,rep,name=ssh_authorized_keys,json=sshAuthorizedKeys,proto3" json:"ssh_authorized_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateVirtualMachineRequest) Reset()         { *m = CreateVirtualMachineRequest{} }
func (m *CreateVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVirtualMachineRequest) ProtoMessage()    {}
func (*CreateVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{2}
}

func (m *CreateVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVirtualMachineRequest.Unmarshal(m, b)
}
func (m *CreateVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *CreateVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVirtualMachineRequest.Merge(m, src)
}
func (m *CreateVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVirtualMachineRequest.Size(m)
}
func (m *CreateVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVirtualMachineRequest proto.InternalMessageInfo

func (m *CreateVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVirtualMachineRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *CreateVirtualMachineRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateVirtualMachineRequest) GetRequestCpuMilliCore() uint32 {
	if m != nil {
		return m.RequestCpuMilliCore
	}
	return 0
}

func (m *CreateVirtualMachineRequest) GetLimitCpuMilliCore() uint32 {
	if m != nil {
		return m.LimitCpuMilliCore
	}
	return 0
}

func (m *CreateVirtualMachineRequest) GetRequestMemoryBytes() uint64 {
	if m != nil {
		return m.RequestMemoryBytes
	}
	return 0
}

func (m *CreateVirtualMachineRequest) GetLimitMemoryBytes() uint64 {
	if m != nil {
		return m.LimitMemoryBytes
	}
	return 0
}

func (m *CreateVirtualMachineRequest) GetBlockStorageNames() []string {
	if m != nil {
		return m.BlockStorageNames
	}
	return nil
}

func (m *CreateVirtualMachineRequest) GetNics() []*VirtualMachineNIC {
	if m != nil {
		return m.Nics
	}
	return nil
}

func (m *CreateVirtualMachineRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CreateVirtualMachineRequest) GetLoginUsername() string {
	if m != nil {
		return m.LoginUsername
	}
	return ""
}

func (m *CreateVirtualMachineRequest) GetSshAuthorizedKeys() []string {
	if m != nil {
		return m.SshAuthorizedKeys
	}
	return nil
}

type ListVirtualMachinesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVirtualMachinesRequest) Reset()         { *m = ListVirtualMachinesRequest{} }
func (m *ListVirtualMachinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListVirtualMachinesRequest) ProtoMessage()    {}
func (*ListVirtualMachinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{3}
}

func (m *ListVirtualMachinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualMachinesRequest.Unmarshal(m, b)
}
func (m *ListVirtualMachinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualMachinesRequest.Marshal(b, m, deterministic)
}
func (m *ListVirtualMachinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualMachinesRequest.Merge(m, src)
}
func (m *ListVirtualMachinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListVirtualMachinesRequest.Size(m)
}
func (m *ListVirtualMachinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualMachinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualMachinesRequest proto.InternalMessageInfo

type ListVirtualMachinesResponse struct {
	VirtualMachines      []*VirtualMachine `protobuf:"bytes,1,rep,name=virtual_machines,json=virtualMachines,proto3" json:"virtual_machines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListVirtualMachinesResponse) Reset()         { *m = ListVirtualMachinesResponse{} }
func (m *ListVirtualMachinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListVirtualMachinesResponse) ProtoMessage()    {}
func (*ListVirtualMachinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{4}
}

func (m *ListVirtualMachinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualMachinesResponse.Unmarshal(m, b)
}
func (m *ListVirtualMachinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualMachinesResponse.Marshal(b, m, deterministic)
}
func (m *ListVirtualMachinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualMachinesResponse.Merge(m, src)
}
func (m *ListVirtualMachinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListVirtualMachinesResponse.Size(m)
}
func (m *ListVirtualMachinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualMachinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualMachinesResponse proto.InternalMessageInfo

func (m *ListVirtualMachinesResponse) GetVirtualMachines() []*VirtualMachine {
	if m != nil {
		return m.VirtualMachines
	}
	return nil
}

type GetVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVirtualMachineRequest) Reset()         { *m = GetVirtualMachineRequest{} }
func (m *GetVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*GetVirtualMachineRequest) ProtoMessage()    {}
func (*GetVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{5}
}

func (m *GetVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualMachineRequest.Unmarshal(m, b)
}
func (m *GetVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *GetVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualMachineRequest.Merge(m, src)
}
func (m *GetVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_GetVirtualMachineRequest.Size(m)
}
func (m *GetVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualMachineRequest proto.InternalMessageInfo

func (m *GetVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateVirtualMachineRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels               map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequestCpuMilliCore  uint32            `protobuf:"varint,10,opt,name=request_cpu_milli_core,json=requestCpuMilliCore,proto3" json:"request_cpu_milli_core,omitempty"`
	RequestMemoryBytes   uint64            `protobuf:"varint,12,opt,name=request_memory_bytes,json=requestMemoryBytes,proto3" json:"request_memory_bytes,omitempty"`
	BlockStorageNames    []string          `protobuf:"bytes,14,rep,name=block_storage_names,json=blockStorageNames,proto3" json:"block_storage_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateVirtualMachineRequest) Reset()         { *m = UpdateVirtualMachineRequest{} }
func (m *UpdateVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVirtualMachineRequest) ProtoMessage()    {}
func (*UpdateVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{6}
}

func (m *UpdateVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVirtualMachineRequest.Unmarshal(m, b)
}
func (m *UpdateVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVirtualMachineRequest.Merge(m, src)
}
func (m *UpdateVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVirtualMachineRequest.Size(m)
}
func (m *UpdateVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVirtualMachineRequest proto.InternalMessageInfo

func (m *UpdateVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVirtualMachineRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *UpdateVirtualMachineRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateVirtualMachineRequest) GetRequestCpuMilliCore() uint32 {
	if m != nil {
		return m.RequestCpuMilliCore
	}
	return 0
}

func (m *UpdateVirtualMachineRequest) GetRequestMemoryBytes() uint64 {
	if m != nil {
		return m.RequestMemoryBytes
	}
	return 0
}

func (m *UpdateVirtualMachineRequest) GetBlockStorageNames() []string {
	if m != nil {
		return m.BlockStorageNames
	}
	return nil
}

type DeleteVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualMachineRequest) Reset()         { *m = DeleteVirtualMachineRequest{} }
func (m *DeleteVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualMachineRequest) ProtoMessage()    {}
func (*DeleteVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{7}
}

func (m *DeleteVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualMachineRequest.Unmarshal(m, b)
}
func (m *DeleteVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualMachineRequest.Merge(m, src)
}
func (m *DeleteVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualMachineRequest.Size(m)
}
func (m *DeleteVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualMachineRequest proto.InternalMessageInfo

func (m *DeleteVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BootVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootVirtualMachineRequest) Reset()         { *m = BootVirtualMachineRequest{} }
func (m *BootVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*BootVirtualMachineRequest) ProtoMessage()    {}
func (*BootVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{8}
}

func (m *BootVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootVirtualMachineRequest.Unmarshal(m, b)
}
func (m *BootVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *BootVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootVirtualMachineRequest.Merge(m, src)
}
func (m *BootVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_BootVirtualMachineRequest.Size(m)
}
func (m *BootVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BootVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BootVirtualMachineRequest proto.InternalMessageInfo

func (m *BootVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RebootVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hard                 bool     `protobuf:"varint,2,opt,name=hard,proto3" json:"hard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootVirtualMachineRequest) Reset()         { *m = RebootVirtualMachineRequest{} }
func (m *RebootVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*RebootVirtualMachineRequest) ProtoMessage()    {}
func (*RebootVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{9}
}

func (m *RebootVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootVirtualMachineRequest.Unmarshal(m, b)
}
func (m *RebootVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *RebootVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootVirtualMachineRequest.Merge(m, src)
}
func (m *RebootVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_RebootVirtualMachineRequest.Size(m)
}
func (m *RebootVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebootVirtualMachineRequest proto.InternalMessageInfo

func (m *RebootVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RebootVirtualMachineRequest) GetHard() bool {
	if m != nil {
		return m.Hard
	}
	return false
}

type ShutdownVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hard                 bool     `protobuf:"varint,2,opt,name=hard,proto3" json:"hard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownVirtualMachineRequest) Reset()         { *m = ShutdownVirtualMachineRequest{} }
func (m *ShutdownVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownVirtualMachineRequest) ProtoMessage()    {}
func (*ShutdownVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{10}
}

func (m *ShutdownVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownVirtualMachineRequest.Unmarshal(m, b)
}
func (m *ShutdownVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *ShutdownVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownVirtualMachineRequest.Merge(m, src)
}
func (m *ShutdownVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownVirtualMachineRequest.Size(m)
}
func (m *ShutdownVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownVirtualMachineRequest proto.InternalMessageInfo

func (m *ShutdownVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShutdownVirtualMachineRequest) GetHard() bool {
	if m != nil {
		return m.Hard
	}
	return false
}

type SaveVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveVirtualMachineRequest) Reset()         { *m = SaveVirtualMachineRequest{} }
func (m *SaveVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*SaveVirtualMachineRequest) ProtoMessage()    {}
func (*SaveVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{11}
}

func (m *SaveVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveVirtualMachineRequest.Unmarshal(m, b)
}
func (m *SaveVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (m *SaveVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVirtualMachineRequest.Merge(m, src)
}
func (m *SaveVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_SaveVirtualMachineRequest.Size(m)
}
func (m *SaveVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVirtualMachineRequest proto.InternalMessageInfo

func (m *SaveVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OpenConsoleRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenConsoleRequest) Reset()         { *m = OpenConsoleRequest{} }
func (m *OpenConsoleRequest) String() string { return proto.CompactTextString(m) }
func (*OpenConsoleRequest) ProtoMessage()    {}
func (*OpenConsoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{12}
}

func (m *OpenConsoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenConsoleRequest.Unmarshal(m, b)
}
func (m *OpenConsoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenConsoleRequest.Marshal(b, m, deterministic)
}
func (m *OpenConsoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenConsoleRequest.Merge(m, src)
}
func (m *OpenConsoleRequest) XXX_Size() int {
	return xxx_messageInfo_OpenConsoleRequest.Size(m)
}
func (m *OpenConsoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenConsoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenConsoleRequest proto.InternalMessageInfo

func (m *OpenConsoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OpenConsoleResponse struct {
	ConsoleUrl           string   `protobuf:"bytes,1,opt,name=console_url,json=consoleUrl,proto3" json:"console_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenConsoleResponse) Reset()         { *m = OpenConsoleResponse{} }
func (m *OpenConsoleResponse) String() string { return proto.CompactTextString(m) }
func (*OpenConsoleResponse) ProtoMessage()    {}
func (*OpenConsoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e78f3faa1fc8418d, []int{13}
}

func (m *OpenConsoleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenConsoleResponse.Unmarshal(m, b)
}
func (m *OpenConsoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenConsoleResponse.Marshal(b, m, deterministic)
}
func (m *OpenConsoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenConsoleResponse.Merge(m, src)
}
func (m *OpenConsoleResponse) XXX_Size() int {
	return xxx_messageInfo_OpenConsoleResponse.Size(m)
}
func (m *OpenConsoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenConsoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenConsoleResponse proto.InternalMessageInfo

func (m *OpenConsoleResponse) GetConsoleUrl() string {
	if m != nil {
		return m.ConsoleUrl
	}
	return ""
}

func init() {
	proto.RegisterEnum("n0stack.provisioning.v0.VirtualMachine_VirtualMachineState", VirtualMachine_VirtualMachineState_name, VirtualMachine_VirtualMachineState_value)
	proto.RegisterType((*VirtualMachineNIC)(nil), "n0stack.provisioning.v0.VirtualMachineNIC")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.VirtualMachineNIC.AnnotationsEntry")
	proto.RegisterType((*VirtualMachine)(nil), "n0stack.provisioning.v0.VirtualMachine")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.VirtualMachine.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.VirtualMachine.LabelsEntry")
	proto.RegisterType((*CreateVirtualMachineRequest)(nil), "n0stack.provisioning.v0.CreateVirtualMachineRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.CreateVirtualMachineRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.CreateVirtualMachineRequest.LabelsEntry")
	proto.RegisterType((*ListVirtualMachinesRequest)(nil), "n0stack.provisioning.v0.ListVirtualMachinesRequest")
	proto.RegisterType((*ListVirtualMachinesResponse)(nil), "n0stack.provisioning.v0.ListVirtualMachinesResponse")
	proto.RegisterType((*GetVirtualMachineRequest)(nil), "n0stack.provisioning.v0.GetVirtualMachineRequest")
	proto.RegisterType((*UpdateVirtualMachineRequest)(nil), "n0stack.provisioning.v0.UpdateVirtualMachineRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.UpdateVirtualMachineRequest.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.provisioning.v0.UpdateVirtualMachineRequest.LabelsEntry")
	proto.RegisterType((*DeleteVirtualMachineRequest)(nil), "n0stack.provisioning.v0.DeleteVirtualMachineRequest")
	proto.RegisterType((*BootVirtualMachineRequest)(nil), "n0stack.provisioning.v0.BootVirtualMachineRequest")
	proto.RegisterType((*RebootVirtualMachineRequest)(nil), "n0stack.provisioning.v0.RebootVirtualMachineRequest")
	proto.RegisterType((*ShutdownVirtualMachineRequest)(nil), "n0stack.provisioning.v0.ShutdownVirtualMachineRequest")
	proto.RegisterType((*SaveVirtualMachineRequest)(nil), "n0stack.provisioning.v0.SaveVirtualMachineRequest")
	proto.RegisterType((*OpenConsoleRequest)(nil), "n0stack.provisioning.v0.OpenConsoleRequest")
	proto.RegisterType((*OpenConsoleResponse)(nil), "n0stack.provisioning.v0.OpenConsoleResponse")
}

func init() {
	proto.RegisterFile("n0stack/provisioning/v0/virtual_machine.proto", fileDescriptor_e78f3faa1fc8418d)
}

var fileDescriptor_e78f3faa1fc8418d = []byte{
	// 1268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x5d, 0x6f, 0xdb, 0x54,
	0x18, 0x9e, 0x9b, 0xac, 0x6c, 0x6f, 0xba, 0x2e, 0x39, 0xcd, 0x3a, 0x2f, 0x19, 0x2c, 0x33, 0x1a,
	0xcb, 0xba, 0xcd, 0xee, 0xda, 0x12, 0x8d, 0x4e, 0x9a, 0x48, 0xd3, 0xd0, 0x45, 0x6b, 0xb3, 0xe2,
	0x2c, 0x03, 0x4d, 0x42, 0x96, 0x93, 0x9c, 0x25, 0xa6, 0x8e, 0x8f, 0xe7, 0x63, 0xa7, 0x0a, 0x88,
	0x9b, 0x5d, 0x70, 0xc5, 0x05, 0x12, 0x17, 0x70, 0x03, 0x12, 0x12, 0x57, 0xdc, 0xf0, 0x2f, 0xf8,
	0x03, 0xfc, 0x05, 0x7e, 0x08, 0xf2, 0xb1, 0xd3, 0xe5, 0xcb, 0x8e, 0xb3, 0x0d, 0x4d, 0x48, 0x5c,
	0xc5, 0x3e, 0xef, 0xd7, 0xe3, 0xe7, 0xbc, 0xef, 0x63, 0x9f, 0xc0, 0x6d, 0x63, 0x9d, 0xda, 0x6a,
	0xf3, 0x48, 0x32, 0x2d, 0xd2, 0xd3, 0xa8, 0x46, 0x0c, 0xcd, 0x68, 0x4b, 0xbd, 0x75, 0xa9, 0xa7,
	0x59, 0xb6, 0xa3, 0xea, 0x4a, 0x57, 0x6d, 0x76, 0x34, 0x03, 0x8b, 0xa6, 0x45, 0x6c, 0x82, 0x2e,
	0xfa, 0xee, 0xe2, 0xb0, 0xbb, 0xd8, 0x5b, 0xcf, 0x5c, 0x6e, 0x13, 0xd2, 0xd6, 0xb1, 0xa4, 0x9a,
	0x9a, 0xa4, 0x1a, 0x06, 0xb1, 0x55, 0x5b, 0x23, 0x06, 0xf5, 0xc2, 0x32, 0x59, 0xdf, 0xca, 0xee,
	0x1a, 0xce, 0x33, 0x09, 0x77, 0x4d, 0xbb, 0xef, 0x19, 0x85, 0x3f, 0x17, 0x20, 0xf5, 0xc4, 0xab,
	0x76, 0xe0, 0x15, 0xab, 0x56, 0x4a, 0xe8, 0x2a, 0x2c, 0x19, 0xd8, 0x3e, 0x26, 0xd6, 0x91, 0x62,
	0xa8, 0x5d, 0xcc, 0x73, 0x39, 0x2e, 0x7f, 0x56, 0x4e, 0xf8, 0x6b, 0x55, 0xb5, 0x8b, 0xd1, 0x17,
	0x90, 0x18, 0x2a, 0xc5, 0x9f, 0xce, 0xc5, 0xf2, 0x89, 0x8d, 0x7b, 0x62, 0x00, 0x44, 0x71, 0xa2,
	0x86, 0x58, 0x7c, 0x19, 0x5d, 0x36, 0x6c, 0xab, 0x2f, 0x0f, 0xe7, 0x43, 0x37, 0x20, 0xd9, 0x51,
	0xad, 0xd6, 0xb1, 0x6a, 0x61, 0x45, 0x6d, 0xb5, 0x2c, 0x4c, 0x29, 0xbf, 0xc0, 0x50, 0x9c, 0x1f,
	0xac, 0x17, 0xbd, 0x65, 0x17, 0xac, 0x66, 0xf6, 0xb6, 0x4e, 0xdc, 0x62, 0x1e, 0x58, 0x77, 0x6d,
	0xd4, 0xa5, 0x70, 0xe2, 0x12, 0x3f, 0x71, 0x29, 0xf8, 0x2e, 0x99, 0xfb, 0x90, 0x1c, 0x47, 0x84,
	0x92, 0x10, 0x3b, 0xc2, 0x7d, 0xff, 0xe9, 0xdd, 0x4b, 0x94, 0x86, 0xd3, 0x3d, 0x55, 0x77, 0xb0,
	0x8f, 0xc5, 0xbb, 0xd9, 0x5e, 0xb8, 0xcb, 0x09, 0x7f, 0x9c, 0x81, 0xe5, 0xd1, 0x87, 0x44, 0x08,
	0xe2, 0x43, 0xec, 0xb1, 0x6b, 0xf4, 0x74, 0x94, 0xb6, 0x18, 0xa3, 0xed, 0x6e, 0x44, 0xda, 0x66,
	0x70, 0xf6, 0x10, 0x16, 0x75, 0xb5, 0x81, 0x75, 0xf7, 0xf9, 0xdc, 0xb4, 0x9b, 0x51, 0xd3, 0xee,
	0xb3, 0x28, 0x2f, 0xa3, 0x9f, 0x02, 0x6d, 0xc2, 0xaa, 0x85, 0x9f, 0x3b, 0x98, 0xda, 0x4a, 0xd3,
	0x74, 0x94, 0xae, 0xa6, 0xeb, 0x9a, 0xd2, 0x24, 0x16, 0xe6, 0x21, 0xc7, 0xe5, 0xcf, 0xc9, 0x2b,
	0xbe, 0xb5, 0x64, 0x3a, 0x07, 0xae, 0xad, 0x44, 0x2c, 0x8c, 0x24, 0x48, 0xeb, 0x5a, 0x57, 0x9b,
	0x08, 0x49, 0xb0, 0x90, 0x14, 0xb3, 0x8d, 0x04, 0xac, 0x43, 0x7a, 0x50, 0xa5, 0x8b, 0xbb, 0xc4,
	0xea, 0x2b, 0x8d, 0xbe, 0x8d, 0x29, 0xbf, 0x94, 0xe3, 0xf2, 0x71, 0x19, 0xf9, 0xb6, 0x03, 0x66,
	0xda, 0x71, 0x2d, 0xe8, 0x16, 0x20, 0xaf, 0xc4, 0x88, 0xff, 0x39, 0xe6, 0x9f, 0x64, 0x96, 0x61,
	0x6f, 0x11, 0x56, 0x1a, 0x3a, 0x69, 0x1e, 0x29, 0xd4, 0x26, 0x96, 0xda, 0xc6, 0xac, 0x9d, 0x29,
	0xbf, 0x9c, 0x8b, 0xe5, 0xcf, 0xca, 0x29, 0x66, 0xaa, 0x79, 0x16, 0xb7, 0xa9, 0x29, 0xba, 0x0f,
	0x71, 0x43, 0x6b, 0x52, 0xfe, 0x3c, 0x23, 0x70, 0x2d, 0x7a, 0x3b, 0xcb, 0x2c, 0xce, 0xdd, 0x72,
	0xc7, 0xd1, 0x5a, 0x7c, 0xd2, 0xdb, 0x72, 0xf7, 0x1a, 0x5d, 0x83, 0x65, 0x9d, 0xb4, 0x35, 0x43,
	0x71, 0x28, 0xb6, 0x58, 0x43, 0xa4, 0x98, 0xf5, 0x1c, 0x5b, 0xad, 0xfb, 0x8b, 0x2e, 0x54, 0x4a,
	0x3b, 0x8a, 0xea, 0xd8, 0x1d, 0x62, 0x69, 0x5f, 0xe1, 0x96, 0x72, 0x84, 0xfb, 0x94, 0x47, 0x1e,
	0x54, 0x4a, 0x3b, 0xc5, 0x13, 0xcb, 0x43, 0xdc, 0xa7, 0xe8, 0x53, 0x38, 0x4d, 0x6d, 0xd5, 0xc6,
	0xfc, 0x46, 0x8e, 0xcb, 0x2f, 0x47, 0x1e, 0xbd, 0xb1, 0xdb, 0x9a, 0x9b, 0x42, 0xf6, 0x32, 0xa1,
	0x35, 0x48, 0x35, 0x49, 0xd7, 0x74, 0x6c, 0xac, 0x18, 0xa4, 0xe5, 0x91, 0xc5, 0x6f, 0x79, 0x53,
	0xe7, 0x1b, 0xaa, 0xa4, 0xc5, 0xa8, 0x72, 0x47, 0xea, 0xc4, 0xd7, 0x75, 0xfb, 0xd0, 0x1b, 0xa9,
	0x81, 0x9b, 0xeb, 0x52, 0x80, 0x8b, 0x03, 0x15, 0xd1, 0x0c, 0x1b, 0x5b, 0xcf, 0xd4, 0xe6, 0x60,
	0x03, 0x0a, 0xec, 0xa9, 0x2e, 0xf8, 0xe6, 0xca, 0xc0, 0xca, 0x36, 0xe1, 0x75, 0x47, 0x31, 0xf3,
	0x11, 0x24, 0x86, 0x3a, 0x7a, 0xae, 0x29, 0xfe, 0x12, 0x56, 0xa6, 0xf0, 0x83, 0xae, 0x40, 0xf6,
	0x49, 0x45, 0x7e, 0x5c, 0x2f, 0xee, 0x2b, 0x07, 0xc5, 0xd2, 0x83, 0x4a, 0xb5, 0xac, 0xd4, 0xab,
	0xb5, 0xc3, 0x72, 0xa9, 0xf2, 0x49, 0xa5, 0xbc, 0x9b, 0x3c, 0x85, 0x12, 0xf0, 0xce, 0x61, 0xb9,
	0xba, 0x5b, 0xa9, 0xee, 0x25, 0x39, 0xf7, 0x46, 0xae, 0x57, 0xab, 0xee, 0xcd, 0x02, 0x5a, 0x82,
	0x33, 0xb5, 0x07, 0xf5, 0xc7, 0xbb, 0x8f, 0x3e, 0xab, 0x26, 0x63, 0x08, 0x60, 0xf1, 0xb0, 0x58,
	0xaf, 0x95, 0x77, 0x93, 0x71, 0xe1, 0xfb, 0x45, 0xc8, 0x96, 0x2c, 0xac, 0xda, 0x78, 0xb4, 0xa4,
	0xec, 0x35, 0xfd, 0x54, 0xf9, 0x68, 0x4f, 0x93, 0x8f, 0x72, 0xe0, 0xd6, 0x87, 0xa4, 0x9f, 0xa1,
	0x25, 0x9f, 0x8f, 0x69, 0xc9, 0xc7, 0xaf, 0x54, 0xe3, 0x7f, 0x61, 0xf9, 0xef, 0x09, 0xcb, 0xdb,
	0x1c, 0xbf, 0xcb, 0x90, 0xd9, 0xd7, 0xa8, 0x3d, 0x4a, 0x02, 0xf5, 0xbb, 0x49, 0x78, 0x0e, 0xd9,
	0xa9, 0x56, 0x6a, 0x12, 0x83, 0x62, 0x24, 0x43, 0x72, 0xec, 0xbb, 0x89, 0xf2, 0x1c, 0xa3, 0xfb,
	0x7a, 0x44, 0xba, 0xe5, 0xf3, 0xbd, 0xd1, 0xdc, 0x82, 0x08, 0xfc, 0x1e, 0xb6, 0x23, 0xcf, 0xa7,
	0xf0, 0x6d, 0x1c, 0xb2, 0x75, 0xb3, 0xf5, 0x6f, 0xce, 0x74, 0x48, 0xfa, 0x37, 0x36, 0xd3, 0x61,
	0x35, 0xde, 0xd8, 0x4c, 0xcf, 0x3f, 0xa2, 0x73, 0x0e, 0xdd, 0xdb, 0xec, 0xe4, 0x3b, 0x90, 0xdd,
	0xc5, 0x3a, 0x9e, 0xa3, 0x0f, 0x04, 0x09, 0x2e, 0xed, 0x10, 0x32, 0x47, 0xb3, 0x95, 0x21, 0x2b,
	0xe3, 0xc6, 0x3c, 0x21, 0xee, 0x9a, 0xfb, 0xf9, 0xcc, 0xf0, 0x9e, 0x91, 0xd9, 0xb5, 0xb0, 0x07,
	0xef, 0xd6, 0x3a, 0x8e, 0xdd, 0x22, 0xc7, 0xc6, 0xeb, 0x25, 0x92, 0xe0, 0x52, 0x4d, 0xed, 0xcd,
	0xf1, 0xc4, 0x79, 0x40, 0x8f, 0x4c, 0x6c, 0x94, 0x88, 0x41, 0x89, 0x1e, 0xea, 0x59, 0x80, 0x95,
	0x11, 0x4f, 0x7f, 0xe4, 0xaf, 0x40, 0xa2, 0xe9, 0x2d, 0x29, 0x8e, 0xa5, 0xfb, 0x11, 0xe0, 0x2f,
	0xd5, 0x2d, 0x7d, 0xe3, 0xc5, 0x12, 0x5c, 0x18, 0x7b, 0xa1, 0x63, 0xab, 0xa7, 0x35, 0x31, 0xfa,
	0x89, 0x83, 0xf4, 0xb4, 0x57, 0x17, 0xda, 0x7a, 0x95, 0x37, 0x5d, 0x26, 0xaa, 0xc4, 0x08, 0x57,
	0x5f, 0xfc, 0xf5, 0xf7, 0x0f, 0x0b, 0x59, 0x61, 0x95, 0x9d, 0xd6, 0x86, 0xce, 0x7a, 0x16, 0x71,
	0x6c, 0x6c, 0x6d, 0x73, 0x6b, 0xe8, 0x57, 0x0e, 0x56, 0xa6, 0x08, 0x1d, 0x0a, 0xfe, 0x9e, 0x0f,
	0x16, 0xcd, 0xcc, 0xd6, 0x7c, 0x41, 0x1e, 0xb1, 0xc2, 0x15, 0x86, 0xf2, 0x12, 0xba, 0x38, 0x8e,
	0xd2, 0x57, 0x56, 0xf4, 0x23, 0x07, 0xa9, 0x09, 0x65, 0x44, 0x77, 0x02, 0x8b, 0x05, 0xa9, 0x68,
	0x74, 0xe2, 0x3e, 0x60, 0x90, 0x72, 0xe8, 0xbd, 0x00, 0x48, 0xd2, 0xd7, 0x6e, 0xa7, 0x7c, 0x83,
	0x8e, 0x21, 0x3d, 0x4d, 0xbe, 0x42, 0xf6, 0x35, 0x44, 0xed, 0xa2, 0xc3, 0x3b, 0x85, 0xbe, 0xe3,
	0x20, 0x3d, 0x6d, 0xe6, 0x43, 0x2a, 0x87, 0x48, 0x44, 0x66, 0x55, 0xf4, 0xce, 0xed, 0xe2, 0xe0,
	0xdc, 0x2e, 0x96, 0xdd, 0x73, 0xfb, 0x80, 0x87, 0xb5, 0x59, 0x3c, 0xfc, 0xc2, 0x01, 0x9a, 0xd4,
	0x13, 0xb4, 0x11, 0x08, 0x26, 0x50, 0x7c, 0xa2, 0x93, 0x70, 0x93, 0x61, 0xbb, 0x26, 0xbc, 0x1f,
	0x8e, 0x6d, 0xdb, 0x15, 0x2d, 0xf4, 0x1b, 0x07, 0xe9, 0x69, 0xfa, 0x15, 0xc2, 0x57, 0x88, 0xdc,
	0x45, 0x07, 0x79, 0x9b, 0x81, 0xbc, 0x2e, 0x5c, 0x9b, 0x01, 0xd2, 0x62, 0xc5, 0xd0, 0xef, 0x1c,
	0xac, 0x4e, 0xd7, 0x47, 0x54, 0x08, 0x2c, 0x19, 0x2a, 0xa8, 0xd1, 0xa1, 0x4a, 0x0c, 0xea, 0x0d,
	0xe1, 0xfa, 0x0c, 0xa8, 0xd4, 0x2f, 0x87, 0x28, 0xa0, 0x49, 0x09, 0x0e, 0xd9, 0xf3, 0x40, 0xbd,
	0x9e, 0xa7, 0xf1, 0x7f, 0xe6, 0x20, 0x31, 0xa4, 0xce, 0xe8, 0x66, 0x60, 0xe8, 0xa4, 0xda, 0x67,
	0x6e, 0x45, 0x73, 0xf6, 0x75, 0x69, 0x93, 0x11, 0x72, 0x1b, 0xdd, 0x9c, 0x41, 0x08, 0x31, 0xb1,
	0xa1, 0xf8, 0xef, 0x81, 0x9d, 0xf2, 0xd3, 0x52, 0x5b, 0xb3, 0x3b, 0x4e, 0x43, 0x6c, 0x92, 0xae,
	0x34, 0xf8, 0xcf, 0xed, 0xe5, 0x2f, 0x1b, 0x30, 0xb1, 0x4d, 0xc6, 0xff, 0x86, 0xbb, 0x67, 0x0e,
	0x2f, 0x34, 0x16, 0x99, 0xdf, 0xe6, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xdc, 0xdd, 0x48,
	0xb6, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualMachineServiceClient is the client API for VirtualMachineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualMachineServiceClient interface {
	CreateVirtualMachine(ctx context.Context, in *CreateVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	ListVirtualMachines(ctx context.Context, in *ListVirtualMachinesRequest, opts ...grpc.CallOption) (*ListVirtualMachinesResponse, error)
	GetVirtualMachine(ctx context.Context, in *GetVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	UpdateVirtualMachine(ctx context.Context, in *UpdateVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	DeleteVirtualMachine(ctx context.Context, in *DeleteVirtualMachineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// VM actions
	// -> RUNNING
	BootVirtualMachine(ctx context.Context, in *BootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	// RUNNING -> RUNNING
	RebootVirtualMachine(ctx context.Context, in *RebootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	// RUNNING -> SHUTDOWN
	ShutdownVirtualMachine(ctx context.Context, in *ShutdownVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	// RUNNING -> PAUSED
	// TODO: I doubt the necessity of this end point
	SaveVirtualMachine(ctx context.Context, in *SaveVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	OpenConsole(ctx context.Context, in *OpenConsoleRequest, opts ...grpc.CallOption) (*OpenConsoleResponse, error)
}

type virtualMachineServiceClient struct {
	cc *grpc.ClientConn
}

func NewVirtualMachineServiceClient(cc *grpc.ClientConn) VirtualMachineServiceClient {
	return &virtualMachineServiceClient{cc}
}

func (c *virtualMachineServiceClient) CreateVirtualMachine(ctx context.Context, in *CreateVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/CreateVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) ListVirtualMachines(ctx context.Context, in *ListVirtualMachinesRequest, opts ...grpc.CallOption) (*ListVirtualMachinesResponse, error) {
	out := new(ListVirtualMachinesResponse)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/ListVirtualMachines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) GetVirtualMachine(ctx context.Context, in *GetVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/GetVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) UpdateVirtualMachine(ctx context.Context, in *UpdateVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/UpdateVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) DeleteVirtualMachine(ctx context.Context, in *DeleteVirtualMachineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/DeleteVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) BootVirtualMachine(ctx context.Context, in *BootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/BootVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) RebootVirtualMachine(ctx context.Context, in *RebootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/RebootVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) ShutdownVirtualMachine(ctx context.Context, in *ShutdownVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/ShutdownVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) SaveVirtualMachine(ctx context.Context, in *SaveVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/SaveVirtualMachine", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) OpenConsole(ctx context.Context, in *OpenConsoleRequest, opts ...grpc.CallOption) (*OpenConsoleResponse, error) {
	out := new(OpenConsoleResponse)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.v0.VirtualMachineService/OpenConsole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualMachineServiceServer is the server API for VirtualMachineService service.
type VirtualMachineServiceServer interface {
	CreateVirtualMachine(context.Context, *CreateVirtualMachineRequest) (*VirtualMachine, error)
	ListVirtualMachines(context.Context, *ListVirtualMachinesRequest) (*ListVirtualMachinesResponse, error)
	GetVirtualMachine(context.Context, *GetVirtualMachineRequest) (*VirtualMachine, error)
	UpdateVirtualMachine(context.Context, *UpdateVirtualMachineRequest) (*VirtualMachine, error)
	DeleteVirtualMachine(context.Context, *DeleteVirtualMachineRequest) (*empty.Empty, error)
	// VM actions
	// -> RUNNING
	BootVirtualMachine(context.Context, *BootVirtualMachineRequest) (*VirtualMachine, error)
	// RUNNING -> RUNNING
	RebootVirtualMachine(context.Context, *RebootVirtualMachineRequest) (*VirtualMachine, error)
	// RUNNING -> SHUTDOWN
	ShutdownVirtualMachine(context.Context, *ShutdownVirtualMachineRequest) (*VirtualMachine, error)
	// RUNNING -> PAUSED
	// TODO: I doubt the necessity of this end point
	SaveVirtualMachine(context.Context, *SaveVirtualMachineRequest) (*VirtualMachine, error)
	OpenConsole(context.Context, *OpenConsoleRequest) (*OpenConsoleResponse, error)
}

// UnimplementedVirtualMachineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualMachineServiceServer struct {
}

func (*UnimplementedVirtualMachineServiceServer) CreateVirtualMachine(ctx context.Context, req *CreateVirtualMachineRequest) (*VirtualMachine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) ListVirtualMachines(ctx context.Context, req *ListVirtualMachinesRequest) (*ListVirtualMachinesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVirtualMachines not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) GetVirtualMachine(ctx context.Context, req *GetVirtualMachineRequest) (*VirtualMachine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) UpdateVirtualMachine(ctx context.Context, req *UpdateVirtualMachineRequest) (*VirtualMachine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) DeleteVirtualMachine(ctx context.Context, req *DeleteVirtualMachineRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) BootVirtualMachine(ctx context.Context, req *BootVirtualMachineRequest) (*VirtualMachine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BootVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) RebootVirtualMachine(ctx context.Context, req *RebootVirtualMachineRequest) (*VirtualMachine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RebootVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) ShutdownVirtualMachine(ctx context.Context, req *ShutdownVirtualMachineRequest) (*VirtualMachine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShutdownVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) SaveVirtualMachine(ctx context.Context, req *SaveVirtualMachineRequest) (*VirtualMachine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveVirtualMachine not implemented")
}
func (*UnimplementedVirtualMachineServiceServer) OpenConsole(ctx context.Context, req *OpenConsoleRequest) (*OpenConsoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenConsole not implemented")
}

func RegisterVirtualMachineServiceServer(s *grpc.Server, srv VirtualMachineServiceServer) {
	s.RegisterService(&_VirtualMachineService_serviceDesc, srv)
}

func _VirtualMachineService_CreateVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).CreateVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/CreateVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).CreateVirtualMachine(ctx, req.(*CreateVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_ListVirtualMachines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtualMachinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).ListVirtualMachines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/ListVirtualMachines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).ListVirtualMachines(ctx, req.(*ListVirtualMachinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_GetVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).GetVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/GetVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).GetVirtualMachine(ctx, req.(*GetVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_UpdateVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).UpdateVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/UpdateVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).UpdateVirtualMachine(ctx, req.(*UpdateVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_DeleteVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).DeleteVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/DeleteVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).DeleteVirtualMachine(ctx, req.(*DeleteVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_BootVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).BootVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/BootVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).BootVirtualMachine(ctx, req.(*BootVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_RebootVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebootVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).RebootVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/RebootVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).RebootVirtualMachine(ctx, req.(*RebootVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_ShutdownVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).ShutdownVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/ShutdownVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).ShutdownVirtualMachine(ctx, req.(*ShutdownVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_SaveVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).SaveVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/SaveVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).SaveVirtualMachine(ctx, req.(*SaveVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_OpenConsole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenConsoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).OpenConsole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.v0.VirtualMachineService/OpenConsole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).OpenConsole(ctx, req.(*OpenConsoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualMachineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.provisioning.v0.VirtualMachineService",
	HandlerType: (*VirtualMachineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVirtualMachine",
			Handler:    _VirtualMachineService_CreateVirtualMachine_Handler,
		},
		{
			MethodName: "ListVirtualMachines",
			Handler:    _VirtualMachineService_ListVirtualMachines_Handler,
		},
		{
			MethodName: "GetVirtualMachine",
			Handler:    _VirtualMachineService_GetVirtualMachine_Handler,
		},
		{
			MethodName: "UpdateVirtualMachine",
			Handler:    _VirtualMachineService_UpdateVirtualMachine_Handler,
		},
		{
			MethodName: "DeleteVirtualMachine",
			Handler:    _VirtualMachineService_DeleteVirtualMachine_Handler,
		},
		{
			MethodName: "BootVirtualMachine",
			Handler:    _VirtualMachineService_BootVirtualMachine_Handler,
		},
		{
			MethodName: "RebootVirtualMachine",
			Handler:    _VirtualMachineService_RebootVirtualMachine_Handler,
		},
		{
			MethodName: "ShutdownVirtualMachine",
			Handler:    _VirtualMachineService_ShutdownVirtualMachine_Handler,
		},
		{
			MethodName: "SaveVirtualMachine",
			Handler:    _VirtualMachineService_SaveVirtualMachine_Handler,
		},
		{
			MethodName: "OpenConsole",
			Handler:    _VirtualMachineService_OpenConsole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "n0stack/provisioning/v0/virtual_machine.proto",
}
