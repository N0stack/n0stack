{
  "swagger": "2.0",
  "info": {
    "title": "deployment/v0/image.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v0/image": {
      "get": {
        "operationId": "ListImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deploymentListImagesResponse"
            }
          }
        },
        "tags": [
          "ImageService"
        ]
      }
    },
    "/api/v0/image/{image_name}/registered_block_storage/{block_storage_name}": {
      "delete": {
        "operationId": "UnregisterBlockStorage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deploymentImage"
            }
          }
        },
        "parameters": [
          {
            "name": "image_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "block_storage_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImageService"
        ]
      },
      "post": {
        "operationId": "RegisterBlockStorage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deploymentImage"
            }
          }
        },
        "parameters": [
          {
            "name": "image_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "block_storage_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deploymentRegisterBlockStorageRequest"
            }
          }
        ],
        "tags": [
          "ImageService"
        ]
      }
    },
    "/api/v0/image/{name}": {
      "get": {
        "operationId": "GetImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deploymentImage"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImageService"
        ]
      },
      "delete": {
        "operationId": "DeleteImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImageService"
        ]
      },
      "put": {
        "operationId": "ApplyImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deploymentImage"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deploymentApplyImageRequest"
            }
          }
        ],
        "tags": [
          "ImageService"
        ]
      }
    },
    "/api/v0/image/{name}/tag/{tag}": {
      "delete": {
        "operationId": "UntagImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deploymentImage"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImageService"
        ]
      },
      "post": {
        "operationId": "TagImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/deploymentImage"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deploymentTagImageRequest"
            }
          }
        ],
        "tags": [
          "ImageService"
        ]
      }
    }
  },
  "definitions": {
    "BlockStorageBlockStorageState": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "PENDING",
        "AVAILABLE",
        "IN_USE",
        "PROTECTED"
      ],
      "default": "UNKNOWN",
      "title": "- UNKNOWN: unknown state because failed to connect for scheduled node after RUNNING\n - PENDING: working API"
    },
    "ImageRegisteredBlockStorage": {
      "type": "object",
      "properties": {
        "block_storage_name": {
          "type": "string"
        },
        "registered_at": {
          "type": "string",
          "format": "date-time"
        },
        "sha256": {
          "type": "string"
        }
      }
    },
    "deploymentApplyImageRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "deploymentImage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is a unique field."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value."
        },
        "registered_block_storages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageRegisteredBlockStorage"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "deploymentListImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/deploymentImage"
          }
        }
      }
    },
    "deploymentRegisterBlockStorageRequest": {
      "type": "object",
      "properties": {
        "image_name": {
          "type": "string"
        },
        "block_storage_name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "deploymentTagImageRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "registered_block_storage_name": {
          "type": "string"
        }
      }
    },
    "provisioningBlockStorage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is a unique field."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value."
        },
        "request_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "limit_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "state": {
          "$ref": "#/definitions/BlockStorageBlockStorageState"
        },
        "node_name": {
          "type": "string"
        },
        "storage_name": {
          "type": "string"
        }
      }
    }
  }
}
